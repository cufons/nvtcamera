// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cameractl.proto
// Protobuf C++ Version: 4.26.0-dev

#include "cameractl.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr UserList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : username_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UserList::UserList(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserListDefaultTypeInternal() {}
  union {
    UserList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserListDefaultTypeInternal _UserList_default_instance_;

inline constexpr NvtCodecVencSettings_VencNoneBRC::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : framerate_{0u},
        gop_{0u},
        byterate_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NvtCodecVencSettings_VencNoneBRC::NvtCodecVencSettings_VencNoneBRC(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NvtCodecVencSettings_VencNoneBRCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NvtCodecVencSettings_VencNoneBRCDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NvtCodecVencSettings_VencNoneBRCDefaultTypeInternal() {}
  union {
    NvtCodecVencSettings_VencNoneBRC _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NvtCodecVencSettings_VencNoneBRCDefaultTypeInternal _NvtCodecVencSettings_VencNoneBRC_default_instance_;

inline constexpr NvtCodecVencSettings_VencFIXQP::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : byterate_{0u},
        framerate_{0u},
        gop_{0u},
        ifixqp_{0u},
        pfixqp_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NvtCodecVencSettings_VencFIXQP::NvtCodecVencSettings_VencFIXQP(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NvtCodecVencSettings_VencFIXQPDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NvtCodecVencSettings_VencFIXQPDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NvtCodecVencSettings_VencFIXQPDefaultTypeInternal() {}
  union {
    NvtCodecVencSettings_VencFIXQP _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NvtCodecVencSettings_VencFIXQPDefaultTypeInternal _NvtCodecVencSettings_VencFIXQP_default_instance_;

inline constexpr NvtCodecVencSettings_VencCBR_RowRcSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : qprange_{0u},
        qpstep_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NvtCodecVencSettings_VencCBR_RowRcSettings::NvtCodecVencSettings_VencCBR_RowRcSettings(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NvtCodecVencSettings_VencCBR_RowRcSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NvtCodecVencSettings_VencCBR_RowRcSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NvtCodecVencSettings_VencCBR_RowRcSettingsDefaultTypeInternal() {}
  union {
    NvtCodecVencSettings_VencCBR_RowRcSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NvtCodecVencSettings_VencCBR_RowRcSettingsDefaultTypeInternal _NvtCodecVencSettings_VencCBR_RowRcSettings_default_instance_;

inline constexpr NvtCodecVencSettings_VencCBR_PQp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : init_{0u},
        min_{0u},
        max_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NvtCodecVencSettings_VencCBR_PQp::NvtCodecVencSettings_VencCBR_PQp(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NvtCodecVencSettings_VencCBR_PQpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NvtCodecVencSettings_VencCBR_PQpDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NvtCodecVencSettings_VencCBR_PQpDefaultTypeInternal() {}
  union {
    NvtCodecVencSettings_VencCBR_PQp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NvtCodecVencSettings_VencCBR_PQpDefaultTypeInternal _NvtCodecVencSettings_VencCBR_PQp_default_instance_;

inline constexpr NvtCodecVencSettings_VencCBR_IQp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : init_{0u},
        min_{0u},
        max_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NvtCodecVencSettings_VencCBR_IQp::NvtCodecVencSettings_VencCBR_IQp(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NvtCodecVencSettings_VencCBR_IQpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NvtCodecVencSettings_VencCBR_IQpDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NvtCodecVencSettings_VencCBR_IQpDefaultTypeInternal() {}
  union {
    NvtCodecVencSettings_VencCBR_IQp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NvtCodecVencSettings_VencCBR_IQpDefaultTypeInternal _NvtCodecVencSettings_VencCBR_IQp_default_instance_;

inline constexpr NvtCodecVencSettings_LTRSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : interval_{0u},
        preref_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NvtCodecVencSettings_LTRSettings::NvtCodecVencSettings_LTRSettings(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NvtCodecVencSettings_LTRSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NvtCodecVencSettings_LTRSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NvtCodecVencSettings_LTRSettingsDefaultTypeInternal() {}
  union {
    NvtCodecVencSettings_LTRSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NvtCodecVencSettings_LTRSettingsDefaultTypeInternal _NvtCodecVencSettings_LTRSettings_default_instance_;

inline constexpr NvtCodecVencSettings_AQSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : aqstr_{0u},
        sraqinitaslog2_{0},
        maxsraq_{0},
        minsraq_{0},
        sraqconstaslog2_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NvtCodecVencSettings_AQSettings::NvtCodecVencSettings_AQSettings(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NvtCodecVencSettings_AQSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NvtCodecVencSettings_AQSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NvtCodecVencSettings_AQSettingsDefaultTypeInternal() {}
  union {
    NvtCodecVencSettings_AQSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NvtCodecVencSettings_AQSettingsDefaultTypeInternal _NvtCodecVencSettings_AQSettings_default_instance_;

inline constexpr NewUserData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exists_{false} {}

template <typename>
PROTOBUF_CONSTEXPR NewUserData::NewUserData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NewUserDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewUserDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewUserDataDefaultTypeInternal() {}
  union {
    NewUserData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewUserDataDefaultTypeInternal _NewUserData_default_instance_;

inline constexpr ModeSwitchParams::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        irenable_{false},
        mode_{static_cast< ::ModeSwitchParams_MSMode >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ModeSwitchParams::ModeSwitchParams(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ModeSwitchParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModeSwitchParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModeSwitchParamsDefaultTypeInternal() {}
  union {
    ModeSwitchParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModeSwitchParamsDefaultTypeInternal _ModeSwitchParams_default_instance_;

inline constexpr ISPSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        selectedpreset_{static_cast< ::ISPSettings_ISPPreset >(0)},
        nightmode_{false},
        brightness_{0},
        saturation_{0},
        hue_{0},
        contrast_{0},
        nrlevel_{0},
        eelevel_{0},
        tnrlevel_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ISPSettings::ISPSettings(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ISPSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ISPSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ISPSettingsDefaultTypeInternal() {}
  union {
    ISPSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ISPSettingsDefaultTypeInternal _ISPSettings_default_instance_;

inline constexpr CamCtlRequest_motorMoveRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : motor_{static_cast< ::StepMotorType >(0)},
        dir_{static_cast< ::StepMotorDirection >(0)},
        steps_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CamCtlRequest_motorMoveRequest::CamCtlRequest_motorMoveRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CamCtlRequest_motorMoveRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CamCtlRequest_motorMoveRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CamCtlRequest_motorMoveRequestDefaultTypeInternal() {}
  union {
    CamCtlRequest_motorMoveRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CamCtlRequest_motorMoveRequestDefaultTypeInternal _CamCtlRequest_motorMoveRequest_default_instance_;

inline constexpr NvtCodecVencSettings_VencCBR::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        iqp_{nullptr},
        pqp_{nullptr},
        rowrcsettings_{nullptr},
        statictime_{0u},
        byterate_{0u},
        framerate_{0u},
        gop_{0u},
        ipweight_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NvtCodecVencSettings_VencCBR::NvtCodecVencSettings_VencCBR(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NvtCodecVencSettings_VencCBRDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NvtCodecVencSettings_VencCBRDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NvtCodecVencSettings_VencCBRDefaultTypeInternal() {}
  union {
    NvtCodecVencSettings_VencCBR _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NvtCodecVencSettings_VencCBRDefaultTypeInternal _NvtCodecVencSettings_VencCBR_default_instance_;

inline constexpr NvtCodecVencSettings_VencVBR::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        cbrsettings_{nullptr},
        changepos_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR NvtCodecVencSettings_VencVBR::NvtCodecVencSettings_VencVBR(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NvtCodecVencSettings_VencVBRDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NvtCodecVencSettings_VencVBRDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NvtCodecVencSettings_VencVBRDefaultTypeInternal() {}
  union {
    NvtCodecVencSettings_VencVBR _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NvtCodecVencSettings_VencVBRDefaultTypeInternal _NvtCodecVencSettings_VencVBR_default_instance_;

inline constexpr NvtCodecVencSettings_VencEVBR::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        cbrsettings_{nullptr},
        keypperiod_{0},
        keypweight_{0},
        motionaqstrength_{0},
        stillframecnt_{0u},
        motionratiothd_{0u},
        ipsnrcnd_{0u},
        ppsnrcnd_{0u},
        keyppsnrcnd_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR NvtCodecVencSettings_VencEVBR::NvtCodecVencSettings_VencEVBR(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NvtCodecVencSettings_VencEVBRDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NvtCodecVencSettings_VencEVBRDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NvtCodecVencSettings_VencEVBRDefaultTypeInternal() {}
  union {
    NvtCodecVencSettings_VencEVBR _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NvtCodecVencSettings_VencEVBRDefaultTypeInternal _NvtCodecVencSettings_VencEVBR_default_instance_;

inline constexpr NvtCodecVencSettings::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        aqsettings_{nullptr},
        ltrsettings_{nullptr},
        vencnum_{0u},
        einputsource_{static_cast< ::NvtCodecVencSettings_InputSource >(0)},
        eformat_{static_cast< ::NvtCodecVencSettings_Format >(0)},
        eprofile_{static_cast< ::NvtCodecVencSettings_Profile >(0)},
        targetwidth_{0u},
        targetheight_{0u},
        svctsettings_{static_cast< ::NvtCodecVencSettings_VencSVCT >(0)},
        evencrt_{static_cast< ::NvtCodecVencSettings_VencRotation >(0)},
        enablenr_{false},
        seienable_{false},
        brcType_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR NvtCodecVencSettings::NvtCodecVencSettings(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NvtCodecVencSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NvtCodecVencSettingsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NvtCodecVencSettingsDefaultTypeInternal() {}
  union {
    NvtCodecVencSettings _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NvtCodecVencSettingsDefaultTypeInternal _NvtCodecVencSettings_default_instance_;

inline constexpr CamCtlResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        errorreason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currentsettings_{nullptr},
        currentispsettings_{nullptr},
        userlist_{nullptr},
        currentmsparams_{nullptr},
        responsetype_{static_cast< ::CamCtlResponse_ResponseType >(0)},
        pingresponse_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CamCtlResponse::CamCtlResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CamCtlResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CamCtlResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CamCtlResponseDefaultTypeInternal() {}
  union {
    CamCtlResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CamCtlResponseDefaultTypeInternal _CamCtlResponse_default_instance_;

inline constexpr CamCtlRequest_vencSettingsSetRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        newsettings_{nullptr},
        tgtvenc_{static_cast< ::VencType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR CamCtlRequest_vencSettingsSetRequest::CamCtlRequest_vencSettingsSetRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CamCtlRequest_vencSettingsSetRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CamCtlRequest_vencSettingsSetRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CamCtlRequest_vencSettingsSetRequestDefaultTypeInternal() {}
  union {
    CamCtlRequest_vencSettingsSetRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CamCtlRequest_vencSettingsSetRequestDefaultTypeInternal _CamCtlRequest_vencSettingsSetRequest_default_instance_;

inline constexpr CamCtlRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : requesttype_{static_cast< ::CamCtlRequest_RequestType >(0)},
        cmdBody_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR CamCtlRequest::CamCtlRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CamCtlRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CamCtlRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CamCtlRequestDefaultTypeInternal() {}
  union {
    CamCtlRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CamCtlRequestDefaultTypeInternal _CamCtlRequest_default_instance_;
static ::_pb::Metadata file_level_metadata_cameractl_2eproto[19];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_cameractl_2eproto[12];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cameractl_2eproto = nullptr;
const ::uint32_t
    TableStruct_cameractl_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencCBR_IQp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencCBR_IQp, _impl_.init_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencCBR_IQp, _impl_.min_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencCBR_IQp, _impl_.max_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencCBR_PQp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencCBR_PQp, _impl_.init_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencCBR_PQp, _impl_.min_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencCBR_PQp, _impl_.max_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencCBR_RowRcSettings, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencCBR_RowRcSettings, _impl_.qprange_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencCBR_RowRcSettings, _impl_.qpstep_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencCBR, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencCBR, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencCBR, _impl_.statictime_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencCBR, _impl_.byterate_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencCBR, _impl_.framerate_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencCBR, _impl_.gop_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencCBR, _impl_.iqp_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencCBR, _impl_.pqp_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencCBR, _impl_.ipweight_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencCBR, _impl_.rowrcsettings_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        2,
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencVBR, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencVBR, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencVBR, _impl_.cbrsettings_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencVBR, _impl_.changepos_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencEVBR, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencEVBR, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencEVBR, _impl_.cbrsettings_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencEVBR, _impl_.keypperiod_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencEVBR, _impl_.keypweight_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencEVBR, _impl_.motionaqstrength_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencEVBR, _impl_.stillframecnt_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencEVBR, _impl_.motionratiothd_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencEVBR, _impl_.ipsnrcnd_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencEVBR, _impl_.ppsnrcnd_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencEVBR, _impl_.keyppsnrcnd_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencNoneBRC, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencNoneBRC, _impl_.framerate_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencNoneBRC, _impl_.gop_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencNoneBRC, _impl_.byterate_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencFIXQP, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencFIXQP, _impl_.byterate_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencFIXQP, _impl_.framerate_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencFIXQP, _impl_.gop_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencFIXQP, _impl_.ifixqp_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_VencFIXQP, _impl_.pfixqp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_AQSettings, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_AQSettings, _impl_.aqstr_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_AQSettings, _impl_.sraqinitaslog2_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_AQSettings, _impl_.maxsraq_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_AQSettings, _impl_.minsraq_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_AQSettings, _impl_.sraqconstaslog2_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_LTRSettings, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_LTRSettings, _impl_.interval_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings_LTRSettings, _impl_.preref_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings, _impl_.vencnum_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings, _impl_.einputsource_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings, _impl_.eformat_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings, _impl_.eprofile_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings, _impl_.targetwidth_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings, _impl_.targetheight_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings, _impl_.svctsettings_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings, _impl_.enablenr_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings, _impl_.evencrt_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings, _impl_.aqsettings_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings, _impl_.ltrsettings_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings, _impl_.seienable_),
        PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings, _impl_.brcType_),
        ~0u,
        ~0u,
        ~0u,
        2,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::ISPSettings, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ISPSettings, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ISPSettings, _impl_.selectedpreset_),
        PROTOBUF_FIELD_OFFSET(::ISPSettings, _impl_.nightmode_),
        PROTOBUF_FIELD_OFFSET(::ISPSettings, _impl_.brightness_),
        PROTOBUF_FIELD_OFFSET(::ISPSettings, _impl_.saturation_),
        PROTOBUF_FIELD_OFFSET(::ISPSettings, _impl_.hue_),
        PROTOBUF_FIELD_OFFSET(::ISPSettings, _impl_.contrast_),
        PROTOBUF_FIELD_OFFSET(::ISPSettings, _impl_.nrlevel_),
        PROTOBUF_FIELD_OFFSET(::ISPSettings, _impl_.eelevel_),
        PROTOBUF_FIELD_OFFSET(::ISPSettings, _impl_.tnrlevel_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::UserList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::UserList, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::NewUserData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::NewUserData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::NewUserData, _impl_.exists_),
        PROTOBUF_FIELD_OFFSET(::NewUserData, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::NewUserData, _impl_.password_),
        ~0u,
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::ModeSwitchParams, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ModeSwitchParams, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ModeSwitchParams, _impl_.irenable_),
        PROTOBUF_FIELD_OFFSET(::ModeSwitchParams, _impl_.mode_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::CamCtlRequest_vencSettingsSetRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CamCtlRequest_vencSettingsSetRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CamCtlRequest_vencSettingsSetRequest, _impl_.tgtvenc_),
        PROTOBUF_FIELD_OFFSET(::CamCtlRequest_vencSettingsSetRequest, _impl_.newsettings_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CamCtlRequest_motorMoveRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CamCtlRequest_motorMoveRequest, _impl_.motor_),
        PROTOBUF_FIELD_OFFSET(::CamCtlRequest_motorMoveRequest, _impl_.dir_),
        PROTOBUF_FIELD_OFFSET(::CamCtlRequest_motorMoveRequest, _impl_.steps_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::CamCtlRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::CamCtlRequest, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CamCtlRequest, _impl_.requesttype_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::CamCtlRequest, _impl_.cmdBody_),
        PROTOBUF_FIELD_OFFSET(::CamCtlResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::CamCtlResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::CamCtlResponse, _impl_.responsetype_),
        PROTOBUF_FIELD_OFFSET(::CamCtlResponse, _impl_.errorreason_),
        PROTOBUF_FIELD_OFFSET(::CamCtlResponse, _impl_.pingresponse_),
        PROTOBUF_FIELD_OFFSET(::CamCtlResponse, _impl_.currentsettings_),
        PROTOBUF_FIELD_OFFSET(::CamCtlResponse, _impl_.currentispsettings_),
        PROTOBUF_FIELD_OFFSET(::CamCtlResponse, _impl_.userlist_),
        PROTOBUF_FIELD_OFFSET(::CamCtlResponse, _impl_.currentmsparams_),
        ~0u,
        0,
        5,
        1,
        2,
        3,
        4,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::NvtCodecVencSettings_VencCBR_IQp)},
        {11, -1, -1, sizeof(::NvtCodecVencSettings_VencCBR_PQp)},
        {22, -1, -1, sizeof(::NvtCodecVencSettings_VencCBR_RowRcSettings)},
        {32, 48, -1, sizeof(::NvtCodecVencSettings_VencCBR)},
        {56, 66, -1, sizeof(::NvtCodecVencSettings_VencVBR)},
        {68, 85, -1, sizeof(::NvtCodecVencSettings_VencEVBR)},
        {94, -1, -1, sizeof(::NvtCodecVencSettings_VencNoneBRC)},
        {105, -1, -1, sizeof(::NvtCodecVencSettings_VencFIXQP)},
        {118, -1, -1, sizeof(::NvtCodecVencSettings_AQSettings)},
        {131, -1, -1, sizeof(::NvtCodecVencSettings_LTRSettings)},
        {141, 167, -1, sizeof(::NvtCodecVencSettings)},
        {184, 201, -1, sizeof(::ISPSettings)},
        {210, -1, -1, sizeof(::UserList)},
        {219, 230, -1, sizeof(::NewUserData)},
        {233, 243, -1, sizeof(::ModeSwitchParams)},
        {245, 255, -1, sizeof(::CamCtlRequest_vencSettingsSetRequest)},
        {257, -1, -1, sizeof(::CamCtlRequest_motorMoveRequest)},
        {268, -1, -1, sizeof(::CamCtlRequest)},
        {289, 304, -1, sizeof(::CamCtlResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_NvtCodecVencSettings_VencCBR_IQp_default_instance_._instance,
    &::_NvtCodecVencSettings_VencCBR_PQp_default_instance_._instance,
    &::_NvtCodecVencSettings_VencCBR_RowRcSettings_default_instance_._instance,
    &::_NvtCodecVencSettings_VencCBR_default_instance_._instance,
    &::_NvtCodecVencSettings_VencVBR_default_instance_._instance,
    &::_NvtCodecVencSettings_VencEVBR_default_instance_._instance,
    &::_NvtCodecVencSettings_VencNoneBRC_default_instance_._instance,
    &::_NvtCodecVencSettings_VencFIXQP_default_instance_._instance,
    &::_NvtCodecVencSettings_AQSettings_default_instance_._instance,
    &::_NvtCodecVencSettings_LTRSettings_default_instance_._instance,
    &::_NvtCodecVencSettings_default_instance_._instance,
    &::_ISPSettings_default_instance_._instance,
    &::_UserList_default_instance_._instance,
    &::_NewUserData_default_instance_._instance,
    &::_ModeSwitchParams_default_instance_._instance,
    &::_CamCtlRequest_vencSettingsSetRequest_default_instance_._instance,
    &::_CamCtlRequest_motorMoveRequest_default_instance_._instance,
    &::_CamCtlRequest_default_instance_._instance,
    &::_CamCtlResponse_default_instance_._instance,
};
const char descriptor_table_protodef_cameractl_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017cameractl.proto\"\205\023\n\024NvtCodecVencSettin"
    "gs\022\017\n\007VencNum\030\001 \001(\r\0227\n\014eInputSource\030\002 \001("
    "\0162!.NvtCodecVencSettings.InputSource\022-\n\007"
    "eFormat\030\003 \001(\0162\034.NvtCodecVencSettings.For"
    "mat\0224\n\010eProfile\030\004 \001(\0162\035.NvtCodecVencSett"
    "ings.ProfileH\001\210\001\001\022\023\n\013TargetWidth\030\005 \001(\r\022\024"
    "\n\014TargetHeight\030\006 \001(\r\022<\n\017noneBrcSettings\030"
    "\010 \001(\0132!.NvtCodecVencSettings.VencNoneBRC"
    "H\000\0224\n\013CBRSettings\030\t \001(\0132\035.NvtCodecVencSe"
    "ttings.VencCBRH\000\0224\n\013VBRSettings\030\n \001(\0132\035."
    "NvtCodecVencSettings.VencVBRH\000\0226\n\014EVBRSe"
    "ttings\030\013 \001(\0132\036.NvtCodecVencSettings.Venc"
    "EVBRH\000\0228\n\rFIXQPSettings\030\014 \001(\0132\037.NvtCodec"
    "VencSettings.VencFIXQPH\000\0224\n\014svctSettings"
    "\030\r \001(\0162\036.NvtCodecVencSettings.VencSVCT\022\020"
    "\n\010enableNR\030\016 \001(\010\0223\n\007eVencRT\030\017 \001(\0162\".NvtC"
    "odecVencSettings.VencRotation\0229\n\naqSetti"
    "ngs\030\020 \001(\0132 .NvtCodecVencSettings.AQSetti"
    "ngsH\002\210\001\001\0226\n\013ltrSettings\030\021 \001(\0132!.NvtCodec"
    "VencSettings.LTRSettings\022\021\n\tSEIEnable\030\022 "
    "\001(\010\032\254\003\n\007VencCBR\022\022\n\nstaticTime\030\001 \001(\r\022\020\n\010b"
    "yterate\030\002 \001(\r\022\021\n\tframerate\030\003 \001(\r\022\013\n\003gop\030"
    "\004 \001(\r\022.\n\003iqp\030\005 \001(\0132!.NvtCodecVencSetting"
    "s.VencCBR.IQp\022.\n\003pqp\030\006 \001(\0132!.NvtCodecVen"
    "cSettings.VencCBR.PQp\022\020\n\010IPWeight\030\007 \001(\005\022"
    "G\n\rrowRcSettings\030\010 \001(\0132+.NvtCodecVencSet"
    "tings.VencCBR.RowRcSettingsH\000\210\001\001\032-\n\003IQp\022"
    "\014\n\004init\030\001 \001(\r\022\013\n\003min\030\002 \001(\r\022\013\n\003max\030\003 \001(\r\032"
    "-\n\003PQp\022\014\n\004init\030\001 \001(\r\022\013\n\003min\030\002 \001(\r\022\013\n\003max"
    "\030\003 \001(\r\0320\n\rRowRcSettings\022\017\n\007QpRange\030\001 \001(\r"
    "\022\016\n\006QpStep\030\002 \001(\rB\020\n\016_rowRcSettings\032P\n\007Ve"
    "ncVBR\0222\n\013cbrSettings\030\001 \001(\0132\035.NvtCodecVen"
    "cSettings.VencCBR\022\021\n\tchangePos\030\002 \001(\r\032\350\001\n"
    "\010VencEVBR\0222\n\013cbrSettings\030\001 \001(\0132\035.NvtCode"
    "cVencSettings.VencCBR\022\022\n\nkeyPPeriod\030\002 \001("
    "\005\022\022\n\nkeyPWeight\030\003 \001(\005\022\030\n\020motionAQStrengt"
    "h\030\004 \001(\005\022\025\n\rstillFrameCnt\030\005 \001(\r\022\026\n\016motion"
    "RatioThd\030\006 \001(\r\022\020\n\010IPsnrCnd\030\007 \001(\r\022\020\n\010PPsn"
    "rCnd\030\010 \001(\r\022\023\n\013KeyPPsnrCnd\030\t \001(\r\032\?\n\013VencN"
    "oneBRC\022\021\n\tframeRate\030\001 \001(\r\022\013\n\003gop\030\002 \001(\r\022\020"
    "\n\010byterate\030\003 \001(\r\032]\n\tVencFIXQP\022\020\n\010byterat"
    "e\030\001 \001(\r\022\021\n\tframerate\030\002 \001(\r\022\013\n\003gop\030\003 \001(\r\022"
    "\016\n\006IFixQP\030\004 \001(\r\022\016\n\006PFixQP\030\005 \001(\r\032n\n\nAQSet"
    "tings\022\r\n\005aqStr\030\001 \001(\r\022\026\n\016sraqInitAslog2\030\002"
    " \001(\005\022\017\n\007maxSraq\030\003 \001(\005\022\017\n\007minSraq\030\004 \001(\005\022\027"
    "\n\017sraqConstAslog2\030\005 \001(\005\032/\n\013LTRSettings\022\020"
    "\n\010interval\030\001 \001(\r\022\016\n\006preRef\030\002 \001(\r\"\245\001\n\013Inp"
    "utSource\022\030\n\024INPUT_SOURCE_UNKNOWN\020\000\022\030\n\024IN"
    "PUT_SOURCE_SENSOR1\020\001\022\030\n\024INPUT_SOURCE_SEN"
    "SOR2\020\002\022\030\n\024INPUT_SOURCE_SENSOR3\020\003\022\030\n\024INPU"
    "T_SOURCE_SENSOR4\020\004\022\024\n\020INPUT_SOURCE_UVC\020\005"
    "\"`\n\006Format\022\022\n\016FORMAT_UNKNOWN\020\000\022\020\n\014FORMAT"
    "_MJPEG\020\001\022\017\n\013FORMAT_H264\020\002\022\017\n\013FORMAT_H265"
    "\020\003\022\016\n\nFORMAT_YUV\020\004\"X\n\007Profile\022\023\n\017PROFILE"
    "_UNKNOWN\020\000\022\024\n\020PROFILE_BASELINE\020\001\022\020\n\014PROF"
    "ILE_MAIN\020\002\022\020\n\014PROFILE_HIGH\020\003\"@\n\010VencSVCT"
    "\022\020\n\014SVCT_DISABLE\020\000\022\020\n\014SVCT_LAYER_1\020\001\022\020\n\014"
    "SVCT_LAYER_2\020\002\"z\n\014VencRotation\022\013\n\007RT_NON"
    "E\020\000\022\021\n\rRT_BUILTIN_90\020\001\022\022\n\016RT_BUILTIN_270"
    "\020\002\022\020\n\014RT_EXTEND_90\020\003\022\021\n\rRT_EXTEND_180\020\004\022"
    "\021\n\rRT_EXTEND_270\020\005B\t\n\007brcTypeB\013\n\t_eProfi"
    "leB\r\n\013_aqSettings\"\311\003\n\013ISPSettings\0223\n\016sel"
    "ectedPreset\030\001 \001(\0162\026.ISPSettings.ISPPrese"
    "tH\000\210\001\001\022\026\n\tnightMode\030\002 \001(\010H\001\210\001\001\022\027\n\nbright"
    "ness\030\003 \001(\005H\002\210\001\001\022\027\n\nsaturation\030\004 \001(\005H\003\210\001\001"
    "\022\020\n\003hue\030\005 \001(\005H\004\210\001\001\022\025\n\010contrast\030\006 \001(\005H\005\210\001"
    "\001\022\024\n\007nrLevel\030\007 \001(\005H\006\210\001\001\022\024\n\007eeLevel\030\010 \001(\005"
    "H\007\210\001\001\022\025\n\010tnrLevel\030\t \001(\005H\010\210\001\001\"V\n\tISPPrese"
    "t\022\022\n\016PRESET_UNKNOWN\020\000\022\016\n\nPRESET_DAY\020\001\022\020\n"
    "\014PRESET_NIGHT\020\002\022\023\n\017PRESET_NIGHT_IR\020\003B\021\n\017"
    "_selectedPresetB\014\n\n_nightModeB\r\n\013_bright"
    "nessB\r\n\013_saturationB\006\n\004_hueB\013\n\t_contrast"
    "B\n\n\010_nrLevelB\n\n\010_eeLevelB\013\n\t_tnrLevel\"\034\n"
    "\010UserList\022\020\n\010username\030\001 \003(\t\"S\n\013NewUserDa"
    "ta\022\016\n\006exists\030\001 \001(\010\022\020\n\010username\030\002 \001(\t\022\025\n\010"
    "password\030\003 \001(\tH\000\210\001\001B\013\n\t_password\"\255\001\n\020Mod"
    "eSwitchParams\022\025\n\010irEnable\030\001 \001(\010H\000\210\001\001\022+\n\004"
    "mode\030\002 \001(\0162\030.ModeSwitchParams.MSModeH\001\210\001"
    "\001\"\?\n\006MSMode\022\016\n\nMS_UNKNOWN\020\000\022\013\n\007MS_AUTO\020\001"
    "\022\n\n\006MS_DAY\020\002\022\014\n\010MS_NIGHT\020\003B\013\n\t_irEnableB"
    "\007\n\005_mode\"\315\005\n\rCamCtlRequest\022/\n\013requestTyp"
    "e\030\001 \001(\0162\032.CamCtlRequest.RequestType\022\025\n\013p"
    "ingRequest\030\002 \001(\010H\000\022@\n\017setVencSettings\030\003 "
    "\001(\0132%.CamCtlRequest.vencSettingsSetReque"
    "stH\000\022$\n\017getVencSettings\030\004 \001(\0162\t.VencType"
    "H\000\0224\n\tmoveMotor\030\005 \001(\0132\037.CamCtlRequest.mo"
    "torMoveRequestH\000\022\032\n\020ispSettingGetReq\030\006 \001"
    "(\010H\000\022&\n\016newIspSettings\030\007 \001(\0132\014.ISPSettin"
    "gsH\000\022\027\n\renableIRLight\030\010 \001(\010H\000\022\027\n\rfetchUs"
    "erList\030\t \001(\010H\000\022&\n\016userModRequest\030\n \001(\0132\014"
    ".NewUserDataH\000\022\030\n\016msParamsGetReq\030\013 \001(\010H\000"
    "\022(\n\013newMsParams\030\014 \001(\0132\021.ModeSwitchParams"
    "H\000\032`\n\026vencSettingsSetRequest\022\032\n\007tgtVenc\030"
    "\001 \001(\0162\t.VencType\022*\n\013newSettings\030\002 \001(\0132\025."
    "NvtCodecVencSettings\032b\n\020motorMoveRequest"
    "\022\035\n\005motor\030\001 \001(\0162\016.StepMotorType\022 \n\003dir\030\002"
    " \001(\0162\023.StepMotorDirection\022\r\n\005steps\030\003 \001(\r"
    "\"#\n\013RequestType\022\013\n\007UNKNOWN\020\000\022\007\n\003CMD\020\001B\t\n"
    "\007cmdBody\"\374\003\n\016CamCtlResponse\0222\n\014responseT"
    "ype\030\001 \001(\0162\034.CamCtlResponse.ResponseType\022"
    "\030\n\013errorReason\030\002 \001(\tH\000\210\001\001\022\031\n\014pingRespons"
    "e\030\003 \001(\010H\001\210\001\001\0223\n\017currentSettings\030\004 \001(\0132\025."
    "NvtCodecVencSettingsH\002\210\001\001\022-\n\022currentISPS"
    "ettings\030\005 \001(\0132\014.ISPSettingsH\003\210\001\001\022 \n\010user"
    "List\030\006 \001(\0132\t.UserListH\004\210\001\001\022/\n\017currentMsP"
    "arams\030\007 \001(\0132\021.ModeSwitchParamsH\005\210\001\001\"]\n\014R"
    "esponseType\022\013\n\007UNKNOWN\020\000\022\006\n\002OK\020\001\022\023\n\017INVA"
    "LID_REQUEST\020\002\022\021\n\rREQUEST_ERROR\020\003\022\020\n\014DECO"
    "DE_ERROR\020\004B\016\n\014_errorReasonB\017\n\r_pingRespo"
    "nseB\022\n\020_currentSettingsB\025\n\023_currentISPSe"
    "ttingsB\013\n\t_userListB\022\n\020_currentMsParams*"
    "9\n\010VencType\022\020\n\014VENC_UNKNOWN\020\000\022\r\n\tVENC_MA"
    "IN\020\001\022\014\n\010VENC_AUX\020\002*P\n\rStepMotorType\022\026\n\022S"
    "TEP_MOTOR_UNKNOWN\020\000\022\022\n\016STEP_MOTOR_PAN\020\001\022"
    "\023\n\017STEP_MOTOR_TILT\020\002*h\n\022StepMotorDirecti"
    "on\022\032\n\026STEP_DIRECTION_UNKNOWN\020\000\022\032\n\026STEP_D"
    "IRECTION_FORWARD\020\001\022\032\n\026STEP_DIRECTION_REV"
    "ERSE\020\002b\006proto3"
};
static ::absl::once_flag descriptor_table_cameractl_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cameractl_2eproto = {
    false,
    false,
    4694,
    descriptor_table_protodef_cameractl_2eproto,
    "cameractl.proto",
    &descriptor_table_cameractl_2eproto_once,
    nullptr,
    0,
    19,
    schemas,
    file_default_instances,
    TableStruct_cameractl_2eproto::offsets,
    file_level_metadata_cameractl_2eproto,
    file_level_enum_descriptors_cameractl_2eproto,
    file_level_service_descriptors_cameractl_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cameractl_2eproto_getter() {
  return &descriptor_table_cameractl_2eproto;
}
const ::google::protobuf::EnumDescriptor* NvtCodecVencSettings_InputSource_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cameractl_2eproto);
  return file_level_enum_descriptors_cameractl_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t NvtCodecVencSettings_InputSource_internal_data_[] = {
    393216u, 0u, };
bool NvtCodecVencSettings_InputSource_IsValid(int value) {
  return 0 <= value && value <= 5;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr NvtCodecVencSettings_InputSource NvtCodecVencSettings::INPUT_SOURCE_UNKNOWN;
constexpr NvtCodecVencSettings_InputSource NvtCodecVencSettings::INPUT_SOURCE_SENSOR1;
constexpr NvtCodecVencSettings_InputSource NvtCodecVencSettings::INPUT_SOURCE_SENSOR2;
constexpr NvtCodecVencSettings_InputSource NvtCodecVencSettings::INPUT_SOURCE_SENSOR3;
constexpr NvtCodecVencSettings_InputSource NvtCodecVencSettings::INPUT_SOURCE_SENSOR4;
constexpr NvtCodecVencSettings_InputSource NvtCodecVencSettings::INPUT_SOURCE_UVC;
constexpr NvtCodecVencSettings_InputSource NvtCodecVencSettings::InputSource_MIN;
constexpr NvtCodecVencSettings_InputSource NvtCodecVencSettings::InputSource_MAX;
constexpr int NvtCodecVencSettings::InputSource_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* NvtCodecVencSettings_Format_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cameractl_2eproto);
  return file_level_enum_descriptors_cameractl_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t NvtCodecVencSettings_Format_internal_data_[] = {
    327680u, 0u, };
bool NvtCodecVencSettings_Format_IsValid(int value) {
  return 0 <= value && value <= 4;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr NvtCodecVencSettings_Format NvtCodecVencSettings::FORMAT_UNKNOWN;
constexpr NvtCodecVencSettings_Format NvtCodecVencSettings::FORMAT_MJPEG;
constexpr NvtCodecVencSettings_Format NvtCodecVencSettings::FORMAT_H264;
constexpr NvtCodecVencSettings_Format NvtCodecVencSettings::FORMAT_H265;
constexpr NvtCodecVencSettings_Format NvtCodecVencSettings::FORMAT_YUV;
constexpr NvtCodecVencSettings_Format NvtCodecVencSettings::Format_MIN;
constexpr NvtCodecVencSettings_Format NvtCodecVencSettings::Format_MAX;
constexpr int NvtCodecVencSettings::Format_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* NvtCodecVencSettings_Profile_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cameractl_2eproto);
  return file_level_enum_descriptors_cameractl_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t NvtCodecVencSettings_Profile_internal_data_[] = {
    262144u, 0u, };
bool NvtCodecVencSettings_Profile_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr NvtCodecVencSettings_Profile NvtCodecVencSettings::PROFILE_UNKNOWN;
constexpr NvtCodecVencSettings_Profile NvtCodecVencSettings::PROFILE_BASELINE;
constexpr NvtCodecVencSettings_Profile NvtCodecVencSettings::PROFILE_MAIN;
constexpr NvtCodecVencSettings_Profile NvtCodecVencSettings::PROFILE_HIGH;
constexpr NvtCodecVencSettings_Profile NvtCodecVencSettings::Profile_MIN;
constexpr NvtCodecVencSettings_Profile NvtCodecVencSettings::Profile_MAX;
constexpr int NvtCodecVencSettings::Profile_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* NvtCodecVencSettings_VencSVCT_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cameractl_2eproto);
  return file_level_enum_descriptors_cameractl_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t NvtCodecVencSettings_VencSVCT_internal_data_[] = {
    196608u, 0u, };
bool NvtCodecVencSettings_VencSVCT_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr NvtCodecVencSettings_VencSVCT NvtCodecVencSettings::SVCT_DISABLE;
constexpr NvtCodecVencSettings_VencSVCT NvtCodecVencSettings::SVCT_LAYER_1;
constexpr NvtCodecVencSettings_VencSVCT NvtCodecVencSettings::SVCT_LAYER_2;
constexpr NvtCodecVencSettings_VencSVCT NvtCodecVencSettings::VencSVCT_MIN;
constexpr NvtCodecVencSettings_VencSVCT NvtCodecVencSettings::VencSVCT_MAX;
constexpr int NvtCodecVencSettings::VencSVCT_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* NvtCodecVencSettings_VencRotation_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cameractl_2eproto);
  return file_level_enum_descriptors_cameractl_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t NvtCodecVencSettings_VencRotation_internal_data_[] = {
    393216u, 0u, };
bool NvtCodecVencSettings_VencRotation_IsValid(int value) {
  return 0 <= value && value <= 5;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr NvtCodecVencSettings_VencRotation NvtCodecVencSettings::RT_NONE;
constexpr NvtCodecVencSettings_VencRotation NvtCodecVencSettings::RT_BUILTIN_90;
constexpr NvtCodecVencSettings_VencRotation NvtCodecVencSettings::RT_BUILTIN_270;
constexpr NvtCodecVencSettings_VencRotation NvtCodecVencSettings::RT_EXTEND_90;
constexpr NvtCodecVencSettings_VencRotation NvtCodecVencSettings::RT_EXTEND_180;
constexpr NvtCodecVencSettings_VencRotation NvtCodecVencSettings::RT_EXTEND_270;
constexpr NvtCodecVencSettings_VencRotation NvtCodecVencSettings::VencRotation_MIN;
constexpr NvtCodecVencSettings_VencRotation NvtCodecVencSettings::VencRotation_MAX;
constexpr int NvtCodecVencSettings::VencRotation_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ISPSettings_ISPPreset_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cameractl_2eproto);
  return file_level_enum_descriptors_cameractl_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t ISPSettings_ISPPreset_internal_data_[] = {
    262144u, 0u, };
bool ISPSettings_ISPPreset_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ISPSettings_ISPPreset ISPSettings::PRESET_UNKNOWN;
constexpr ISPSettings_ISPPreset ISPSettings::PRESET_DAY;
constexpr ISPSettings_ISPPreset ISPSettings::PRESET_NIGHT;
constexpr ISPSettings_ISPPreset ISPSettings::PRESET_NIGHT_IR;
constexpr ISPSettings_ISPPreset ISPSettings::ISPPreset_MIN;
constexpr ISPSettings_ISPPreset ISPSettings::ISPPreset_MAX;
constexpr int ISPSettings::ISPPreset_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ModeSwitchParams_MSMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cameractl_2eproto);
  return file_level_enum_descriptors_cameractl_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t ModeSwitchParams_MSMode_internal_data_[] = {
    262144u, 0u, };
bool ModeSwitchParams_MSMode_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ModeSwitchParams_MSMode ModeSwitchParams::MS_UNKNOWN;
constexpr ModeSwitchParams_MSMode ModeSwitchParams::MS_AUTO;
constexpr ModeSwitchParams_MSMode ModeSwitchParams::MS_DAY;
constexpr ModeSwitchParams_MSMode ModeSwitchParams::MS_NIGHT;
constexpr ModeSwitchParams_MSMode ModeSwitchParams::MSMode_MIN;
constexpr ModeSwitchParams_MSMode ModeSwitchParams::MSMode_MAX;
constexpr int ModeSwitchParams::MSMode_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* CamCtlRequest_RequestType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cameractl_2eproto);
  return file_level_enum_descriptors_cameractl_2eproto[7];
}
PROTOBUF_CONSTINIT const uint32_t CamCtlRequest_RequestType_internal_data_[] = {
    131072u, 0u, };
bool CamCtlRequest_RequestType_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr CamCtlRequest_RequestType CamCtlRequest::UNKNOWN;
constexpr CamCtlRequest_RequestType CamCtlRequest::CMD;
constexpr CamCtlRequest_RequestType CamCtlRequest::RequestType_MIN;
constexpr CamCtlRequest_RequestType CamCtlRequest::RequestType_MAX;
constexpr int CamCtlRequest::RequestType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* CamCtlResponse_ResponseType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cameractl_2eproto);
  return file_level_enum_descriptors_cameractl_2eproto[8];
}
PROTOBUF_CONSTINIT const uint32_t CamCtlResponse_ResponseType_internal_data_[] = {
    327680u, 0u, };
bool CamCtlResponse_ResponseType_IsValid(int value) {
  return 0 <= value && value <= 4;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr CamCtlResponse_ResponseType CamCtlResponse::UNKNOWN;
constexpr CamCtlResponse_ResponseType CamCtlResponse::OK;
constexpr CamCtlResponse_ResponseType CamCtlResponse::INVALID_REQUEST;
constexpr CamCtlResponse_ResponseType CamCtlResponse::REQUEST_ERROR;
constexpr CamCtlResponse_ResponseType CamCtlResponse::DECODE_ERROR;
constexpr CamCtlResponse_ResponseType CamCtlResponse::ResponseType_MIN;
constexpr CamCtlResponse_ResponseType CamCtlResponse::ResponseType_MAX;
constexpr int CamCtlResponse::ResponseType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* VencType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cameractl_2eproto);
  return file_level_enum_descriptors_cameractl_2eproto[9];
}
PROTOBUF_CONSTINIT const uint32_t VencType_internal_data_[] = {
    196608u, 0u, };
bool VencType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* StepMotorType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cameractl_2eproto);
  return file_level_enum_descriptors_cameractl_2eproto[10];
}
PROTOBUF_CONSTINIT const uint32_t StepMotorType_internal_data_[] = {
    196608u, 0u, };
bool StepMotorType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* StepMotorDirection_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cameractl_2eproto);
  return file_level_enum_descriptors_cameractl_2eproto[11];
}
PROTOBUF_CONSTINIT const uint32_t StepMotorDirection_internal_data_[] = {
    196608u, 0u, };
bool StepMotorDirection_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class NvtCodecVencSettings_VencCBR_IQp::_Internal {
 public:
};

NvtCodecVencSettings_VencCBR_IQp::NvtCodecVencSettings_VencCBR_IQp(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NvtCodecVencSettings.VencCBR.IQp)
}
NvtCodecVencSettings_VencCBR_IQp::NvtCodecVencSettings_VencCBR_IQp(
    ::google::protobuf::Arena* arena, const NvtCodecVencSettings_VencCBR_IQp& from)
    : NvtCodecVencSettings_VencCBR_IQp(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NvtCodecVencSettings_VencCBR_IQp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NvtCodecVencSettings_VencCBR_IQp::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, init_),
           0,
           offsetof(Impl_, max_) -
               offsetof(Impl_, init_) +
               sizeof(Impl_::max_));
}
NvtCodecVencSettings_VencCBR_IQp::~NvtCodecVencSettings_VencCBR_IQp() {
  // @@protoc_insertion_point(destructor:NvtCodecVencSettings.VencCBR.IQp)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NvtCodecVencSettings_VencCBR_IQp::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NvtCodecVencSettings_VencCBR_IQp::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_IQp, _impl_._cached_size_),
              false,
          },
          &NvtCodecVencSettings_VencCBR_IQp::MergeImpl,
          &NvtCodecVencSettings_VencCBR_IQp::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void NvtCodecVencSettings_VencCBR_IQp::Clear() {
// @@protoc_insertion_point(message_clear_start:NvtCodecVencSettings.VencCBR.IQp)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.init_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.max_) -
      reinterpret_cast<char*>(&_impl_.init_)) + sizeof(_impl_.max_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NvtCodecVencSettings_VencCBR_IQp::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> NvtCodecVencSettings_VencCBR_IQp::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NvtCodecVencSettings_VencCBR_IQp_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NvtCodecVencSettings_VencCBR_IQp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 init = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencCBR_IQp, _impl_.init_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_IQp, _impl_.init_)}},
    // uint32 min = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencCBR_IQp, _impl_.min_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_IQp, _impl_.min_)}},
    // uint32 max = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencCBR_IQp, _impl_.max_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_IQp, _impl_.max_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 init = 1;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_IQp, _impl_.init_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 min = 2;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_IQp, _impl_.min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 max = 3;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_IQp, _impl_.max_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* NvtCodecVencSettings_VencCBR_IQp::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NvtCodecVencSettings.VencCBR.IQp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 init = 1;
  if (this->_internal_init() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_init(), target);
  }

  // uint32 min = 2;
  if (this->_internal_min() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_min(), target);
  }

  // uint32 max = 3;
  if (this->_internal_max() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_max(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NvtCodecVencSettings.VencCBR.IQp)
  return target;
}

::size_t NvtCodecVencSettings_VencCBR_IQp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NvtCodecVencSettings.VencCBR.IQp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 init = 1;
  if (this->_internal_init() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_init());
  }

  // uint32 min = 2;
  if (this->_internal_min() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_min());
  }

  // uint32 max = 3;
  if (this->_internal_max() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_max());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NvtCodecVencSettings_VencCBR_IQp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NvtCodecVencSettings_VencCBR_IQp*>(&to_msg);
  auto& from = static_cast<const NvtCodecVencSettings_VencCBR_IQp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NvtCodecVencSettings.VencCBR.IQp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_init() != 0) {
    _this->_impl_.init_ = from._impl_.init_;
  }
  if (from._internal_min() != 0) {
    _this->_impl_.min_ = from._impl_.min_;
  }
  if (from._internal_max() != 0) {
    _this->_impl_.max_ = from._impl_.max_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NvtCodecVencSettings_VencCBR_IQp::CopyFrom(const NvtCodecVencSettings_VencCBR_IQp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NvtCodecVencSettings.VencCBR.IQp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NvtCodecVencSettings_VencCBR_IQp::IsInitialized() const {
  return true;
}

void NvtCodecVencSettings_VencCBR_IQp::InternalSwap(NvtCodecVencSettings_VencCBR_IQp* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_IQp, _impl_.max_)
      + sizeof(NvtCodecVencSettings_VencCBR_IQp::_impl_.max_)
      - PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_IQp, _impl_.init_)>(
          reinterpret_cast<char*>(&_impl_.init_),
          reinterpret_cast<char*>(&other->_impl_.init_));
}

::google::protobuf::Metadata NvtCodecVencSettings_VencCBR_IQp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_cameractl_2eproto_getter,
                                   &descriptor_table_cameractl_2eproto_once,
                                   file_level_metadata_cameractl_2eproto[0]);
}
// ===================================================================

class NvtCodecVencSettings_VencCBR_PQp::_Internal {
 public:
};

NvtCodecVencSettings_VencCBR_PQp::NvtCodecVencSettings_VencCBR_PQp(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NvtCodecVencSettings.VencCBR.PQp)
}
NvtCodecVencSettings_VencCBR_PQp::NvtCodecVencSettings_VencCBR_PQp(
    ::google::protobuf::Arena* arena, const NvtCodecVencSettings_VencCBR_PQp& from)
    : NvtCodecVencSettings_VencCBR_PQp(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NvtCodecVencSettings_VencCBR_PQp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NvtCodecVencSettings_VencCBR_PQp::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, init_),
           0,
           offsetof(Impl_, max_) -
               offsetof(Impl_, init_) +
               sizeof(Impl_::max_));
}
NvtCodecVencSettings_VencCBR_PQp::~NvtCodecVencSettings_VencCBR_PQp() {
  // @@protoc_insertion_point(destructor:NvtCodecVencSettings.VencCBR.PQp)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NvtCodecVencSettings_VencCBR_PQp::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NvtCodecVencSettings_VencCBR_PQp::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_PQp, _impl_._cached_size_),
              false,
          },
          &NvtCodecVencSettings_VencCBR_PQp::MergeImpl,
          &NvtCodecVencSettings_VencCBR_PQp::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void NvtCodecVencSettings_VencCBR_PQp::Clear() {
// @@protoc_insertion_point(message_clear_start:NvtCodecVencSettings.VencCBR.PQp)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.init_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.max_) -
      reinterpret_cast<char*>(&_impl_.init_)) + sizeof(_impl_.max_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NvtCodecVencSettings_VencCBR_PQp::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> NvtCodecVencSettings_VencCBR_PQp::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NvtCodecVencSettings_VencCBR_PQp_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NvtCodecVencSettings_VencCBR_PQp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 init = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencCBR_PQp, _impl_.init_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_PQp, _impl_.init_)}},
    // uint32 min = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencCBR_PQp, _impl_.min_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_PQp, _impl_.min_)}},
    // uint32 max = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencCBR_PQp, _impl_.max_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_PQp, _impl_.max_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 init = 1;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_PQp, _impl_.init_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 min = 2;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_PQp, _impl_.min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 max = 3;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_PQp, _impl_.max_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* NvtCodecVencSettings_VencCBR_PQp::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NvtCodecVencSettings.VencCBR.PQp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 init = 1;
  if (this->_internal_init() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_init(), target);
  }

  // uint32 min = 2;
  if (this->_internal_min() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_min(), target);
  }

  // uint32 max = 3;
  if (this->_internal_max() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_max(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NvtCodecVencSettings.VencCBR.PQp)
  return target;
}

::size_t NvtCodecVencSettings_VencCBR_PQp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NvtCodecVencSettings.VencCBR.PQp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 init = 1;
  if (this->_internal_init() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_init());
  }

  // uint32 min = 2;
  if (this->_internal_min() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_min());
  }

  // uint32 max = 3;
  if (this->_internal_max() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_max());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NvtCodecVencSettings_VencCBR_PQp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NvtCodecVencSettings_VencCBR_PQp*>(&to_msg);
  auto& from = static_cast<const NvtCodecVencSettings_VencCBR_PQp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NvtCodecVencSettings.VencCBR.PQp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_init() != 0) {
    _this->_impl_.init_ = from._impl_.init_;
  }
  if (from._internal_min() != 0) {
    _this->_impl_.min_ = from._impl_.min_;
  }
  if (from._internal_max() != 0) {
    _this->_impl_.max_ = from._impl_.max_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NvtCodecVencSettings_VencCBR_PQp::CopyFrom(const NvtCodecVencSettings_VencCBR_PQp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NvtCodecVencSettings.VencCBR.PQp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NvtCodecVencSettings_VencCBR_PQp::IsInitialized() const {
  return true;
}

void NvtCodecVencSettings_VencCBR_PQp::InternalSwap(NvtCodecVencSettings_VencCBR_PQp* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_PQp, _impl_.max_)
      + sizeof(NvtCodecVencSettings_VencCBR_PQp::_impl_.max_)
      - PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_PQp, _impl_.init_)>(
          reinterpret_cast<char*>(&_impl_.init_),
          reinterpret_cast<char*>(&other->_impl_.init_));
}

::google::protobuf::Metadata NvtCodecVencSettings_VencCBR_PQp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_cameractl_2eproto_getter,
                                   &descriptor_table_cameractl_2eproto_once,
                                   file_level_metadata_cameractl_2eproto[1]);
}
// ===================================================================

class NvtCodecVencSettings_VencCBR_RowRcSettings::_Internal {
 public:
};

NvtCodecVencSettings_VencCBR_RowRcSettings::NvtCodecVencSettings_VencCBR_RowRcSettings(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NvtCodecVencSettings.VencCBR.RowRcSettings)
}
NvtCodecVencSettings_VencCBR_RowRcSettings::NvtCodecVencSettings_VencCBR_RowRcSettings(
    ::google::protobuf::Arena* arena, const NvtCodecVencSettings_VencCBR_RowRcSettings& from)
    : NvtCodecVencSettings_VencCBR_RowRcSettings(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NvtCodecVencSettings_VencCBR_RowRcSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NvtCodecVencSettings_VencCBR_RowRcSettings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, qprange_),
           0,
           offsetof(Impl_, qpstep_) -
               offsetof(Impl_, qprange_) +
               sizeof(Impl_::qpstep_));
}
NvtCodecVencSettings_VencCBR_RowRcSettings::~NvtCodecVencSettings_VencCBR_RowRcSettings() {
  // @@protoc_insertion_point(destructor:NvtCodecVencSettings.VencCBR.RowRcSettings)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NvtCodecVencSettings_VencCBR_RowRcSettings::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NvtCodecVencSettings_VencCBR_RowRcSettings::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_RowRcSettings, _impl_._cached_size_),
              false,
          },
          &NvtCodecVencSettings_VencCBR_RowRcSettings::MergeImpl,
          &NvtCodecVencSettings_VencCBR_RowRcSettings::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void NvtCodecVencSettings_VencCBR_RowRcSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:NvtCodecVencSettings.VencCBR.RowRcSettings)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.qprange_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.qpstep_) -
      reinterpret_cast<char*>(&_impl_.qprange_)) + sizeof(_impl_.qpstep_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NvtCodecVencSettings_VencCBR_RowRcSettings::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> NvtCodecVencSettings_VencCBR_RowRcSettings::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NvtCodecVencSettings_VencCBR_RowRcSettings_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NvtCodecVencSettings_VencCBR_RowRcSettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 QpStep = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencCBR_RowRcSettings, _impl_.qpstep_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_RowRcSettings, _impl_.qpstep_)}},
    // uint32 QpRange = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencCBR_RowRcSettings, _impl_.qprange_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_RowRcSettings, _impl_.qprange_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 QpRange = 1;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_RowRcSettings, _impl_.qprange_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 QpStep = 2;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_RowRcSettings, _impl_.qpstep_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* NvtCodecVencSettings_VencCBR_RowRcSettings::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NvtCodecVencSettings.VencCBR.RowRcSettings)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 QpRange = 1;
  if (this->_internal_qprange() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_qprange(), target);
  }

  // uint32 QpStep = 2;
  if (this->_internal_qpstep() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_qpstep(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NvtCodecVencSettings.VencCBR.RowRcSettings)
  return target;
}

::size_t NvtCodecVencSettings_VencCBR_RowRcSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NvtCodecVencSettings.VencCBR.RowRcSettings)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 QpRange = 1;
  if (this->_internal_qprange() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_qprange());
  }

  // uint32 QpStep = 2;
  if (this->_internal_qpstep() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_qpstep());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NvtCodecVencSettings_VencCBR_RowRcSettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NvtCodecVencSettings_VencCBR_RowRcSettings*>(&to_msg);
  auto& from = static_cast<const NvtCodecVencSettings_VencCBR_RowRcSettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NvtCodecVencSettings.VencCBR.RowRcSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_qprange() != 0) {
    _this->_impl_.qprange_ = from._impl_.qprange_;
  }
  if (from._internal_qpstep() != 0) {
    _this->_impl_.qpstep_ = from._impl_.qpstep_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NvtCodecVencSettings_VencCBR_RowRcSettings::CopyFrom(const NvtCodecVencSettings_VencCBR_RowRcSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NvtCodecVencSettings.VencCBR.RowRcSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NvtCodecVencSettings_VencCBR_RowRcSettings::IsInitialized() const {
  return true;
}

void NvtCodecVencSettings_VencCBR_RowRcSettings::InternalSwap(NvtCodecVencSettings_VencCBR_RowRcSettings* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_RowRcSettings, _impl_.qpstep_)
      + sizeof(NvtCodecVencSettings_VencCBR_RowRcSettings::_impl_.qpstep_)
      - PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR_RowRcSettings, _impl_.qprange_)>(
          reinterpret_cast<char*>(&_impl_.qprange_),
          reinterpret_cast<char*>(&other->_impl_.qprange_));
}

::google::protobuf::Metadata NvtCodecVencSettings_VencCBR_RowRcSettings::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_cameractl_2eproto_getter,
                                   &descriptor_table_cameractl_2eproto_once,
                                   file_level_metadata_cameractl_2eproto[2]);
}
// ===================================================================

class NvtCodecVencSettings_VencCBR::_Internal {
 public:
  using HasBits = decltype(std::declval<NvtCodecVencSettings_VencCBR>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR, _impl_._has_bits_);
};

NvtCodecVencSettings_VencCBR::NvtCodecVencSettings_VencCBR(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NvtCodecVencSettings.VencCBR)
}
inline PROTOBUF_NDEBUG_INLINE NvtCodecVencSettings_VencCBR::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

NvtCodecVencSettings_VencCBR::NvtCodecVencSettings_VencCBR(
    ::google::protobuf::Arena* arena,
    const NvtCodecVencSettings_VencCBR& from)
    : ::google::protobuf::Message(arena) {
  NvtCodecVencSettings_VencCBR* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.iqp_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_VencCBR_IQp>(
                              arena, *from._impl_.iqp_)
                        : nullptr;
  _impl_.pqp_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_VencCBR_PQp>(
                              arena, *from._impl_.pqp_)
                        : nullptr;
  _impl_.rowrcsettings_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_VencCBR_RowRcSettings>(
                              arena, *from._impl_.rowrcsettings_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, statictime_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, statictime_),
           offsetof(Impl_, ipweight_) -
               offsetof(Impl_, statictime_) +
               sizeof(Impl_::ipweight_));

  // @@protoc_insertion_point(copy_constructor:NvtCodecVencSettings.VencCBR)
}
inline PROTOBUF_NDEBUG_INLINE NvtCodecVencSettings_VencCBR::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NvtCodecVencSettings_VencCBR::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, iqp_),
           0,
           offsetof(Impl_, ipweight_) -
               offsetof(Impl_, iqp_) +
               sizeof(Impl_::ipweight_));
}
NvtCodecVencSettings_VencCBR::~NvtCodecVencSettings_VencCBR() {
  // @@protoc_insertion_point(destructor:NvtCodecVencSettings.VencCBR)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NvtCodecVencSettings_VencCBR::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.iqp_;
  delete _impl_.pqp_;
  delete _impl_.rowrcsettings_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NvtCodecVencSettings_VencCBR::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR, _impl_._cached_size_),
              false,
          },
          &NvtCodecVencSettings_VencCBR::MergeImpl,
          &NvtCodecVencSettings_VencCBR::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void NvtCodecVencSettings_VencCBR::Clear() {
// @@protoc_insertion_point(message_clear_start:NvtCodecVencSettings.VencCBR)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.iqp_ != nullptr);
      _impl_.iqp_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.pqp_ != nullptr);
      _impl_.pqp_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.rowrcsettings_ != nullptr);
      _impl_.rowrcsettings_->Clear();
    }
  }
  ::memset(&_impl_.statictime_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ipweight_) -
      reinterpret_cast<char*>(&_impl_.statictime_)) + sizeof(_impl_.ipweight_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NvtCodecVencSettings_VencCBR::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 3, 0, 2> NvtCodecVencSettings_VencCBR::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NvtCodecVencSettings_VencCBR_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NvtCodecVencSettings_VencCBR>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .NvtCodecVencSettings.VencCBR.RowRcSettings rowRcSettings = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 2, 2, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR, _impl_.rowrcsettings_)}},
    // uint32 staticTime = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencCBR, _impl_.statictime_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR, _impl_.statictime_)}},
    // uint32 byterate = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencCBR, _impl_.byterate_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR, _impl_.byterate_)}},
    // uint32 framerate = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencCBR, _impl_.framerate_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR, _impl_.framerate_)}},
    // uint32 gop = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencCBR, _impl_.gop_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR, _impl_.gop_)}},
    // .NvtCodecVencSettings.VencCBR.IQp iqp = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR, _impl_.iqp_)}},
    // .NvtCodecVencSettings.VencCBR.PQp pqp = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 1, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR, _impl_.pqp_)}},
    // int32 IPWeight = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencCBR, _impl_.ipweight_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR, _impl_.ipweight_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 staticTime = 1;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR, _impl_.statictime_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 byterate = 2;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR, _impl_.byterate_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 framerate = 3;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR, _impl_.framerate_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 gop = 4;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR, _impl_.gop_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .NvtCodecVencSettings.VencCBR.IQp iqp = 5;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR, _impl_.iqp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .NvtCodecVencSettings.VencCBR.PQp pqp = 6;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR, _impl_.pqp_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 IPWeight = 7;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR, _impl_.ipweight_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // optional .NvtCodecVencSettings.VencCBR.RowRcSettings rowRcSettings = 8;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR, _impl_.rowrcsettings_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NvtCodecVencSettings_VencCBR_IQp>()},
    {::_pbi::TcParser::GetTable<::NvtCodecVencSettings_VencCBR_PQp>()},
    {::_pbi::TcParser::GetTable<::NvtCodecVencSettings_VencCBR_RowRcSettings>()},
  }}, {{
  }},
};

::uint8_t* NvtCodecVencSettings_VencCBR::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NvtCodecVencSettings.VencCBR)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 staticTime = 1;
  if (this->_internal_statictime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_statictime(), target);
  }

  // uint32 byterate = 2;
  if (this->_internal_byterate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_byterate(), target);
  }

  // uint32 framerate = 3;
  if (this->_internal_framerate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_framerate(), target);
  }

  // uint32 gop = 4;
  if (this->_internal_gop() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_gop(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .NvtCodecVencSettings.VencCBR.IQp iqp = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.iqp_, _impl_.iqp_->GetCachedSize(), target, stream);
  }

  // .NvtCodecVencSettings.VencCBR.PQp pqp = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.pqp_, _impl_.pqp_->GetCachedSize(), target, stream);
  }

  // int32 IPWeight = 7;
  if (this->_internal_ipweight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_ipweight(), target);
  }

  // optional .NvtCodecVencSettings.VencCBR.RowRcSettings rowRcSettings = 8;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *_impl_.rowrcsettings_, _impl_.rowrcsettings_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NvtCodecVencSettings.VencCBR)
  return target;
}

::size_t NvtCodecVencSettings_VencCBR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NvtCodecVencSettings.VencCBR)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .NvtCodecVencSettings.VencCBR.IQp iqp = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.iqp_);
    }

    // .NvtCodecVencSettings.VencCBR.PQp pqp = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.pqp_);
    }

    // optional .NvtCodecVencSettings.VencCBR.RowRcSettings rowRcSettings = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.rowrcsettings_);
    }

  }
  // uint32 staticTime = 1;
  if (this->_internal_statictime() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_statictime());
  }

  // uint32 byterate = 2;
  if (this->_internal_byterate() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_byterate());
  }

  // uint32 framerate = 3;
  if (this->_internal_framerate() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_framerate());
  }

  // uint32 gop = 4;
  if (this->_internal_gop() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_gop());
  }

  // int32 IPWeight = 7;
  if (this->_internal_ipweight() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_ipweight());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NvtCodecVencSettings_VencCBR::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NvtCodecVencSettings_VencCBR*>(&to_msg);
  auto& from = static_cast<const NvtCodecVencSettings_VencCBR&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:NvtCodecVencSettings.VencCBR)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.iqp_ != nullptr);
      if (_this->_impl_.iqp_ == nullptr) {
        _this->_impl_.iqp_ =
            ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_VencCBR_IQp>(arena, *from._impl_.iqp_);
      } else {
        _this->_impl_.iqp_->MergeFrom(*from._impl_.iqp_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.pqp_ != nullptr);
      if (_this->_impl_.pqp_ == nullptr) {
        _this->_impl_.pqp_ =
            ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_VencCBR_PQp>(arena, *from._impl_.pqp_);
      } else {
        _this->_impl_.pqp_->MergeFrom(*from._impl_.pqp_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.rowrcsettings_ != nullptr);
      if (_this->_impl_.rowrcsettings_ == nullptr) {
        _this->_impl_.rowrcsettings_ =
            ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_VencCBR_RowRcSettings>(arena, *from._impl_.rowrcsettings_);
      } else {
        _this->_impl_.rowrcsettings_->MergeFrom(*from._impl_.rowrcsettings_);
      }
    }
  }
  if (from._internal_statictime() != 0) {
    _this->_impl_.statictime_ = from._impl_.statictime_;
  }
  if (from._internal_byterate() != 0) {
    _this->_impl_.byterate_ = from._impl_.byterate_;
  }
  if (from._internal_framerate() != 0) {
    _this->_impl_.framerate_ = from._impl_.framerate_;
  }
  if (from._internal_gop() != 0) {
    _this->_impl_.gop_ = from._impl_.gop_;
  }
  if (from._internal_ipweight() != 0) {
    _this->_impl_.ipweight_ = from._impl_.ipweight_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NvtCodecVencSettings_VencCBR::CopyFrom(const NvtCodecVencSettings_VencCBR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NvtCodecVencSettings.VencCBR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NvtCodecVencSettings_VencCBR::IsInitialized() const {
  return true;
}

void NvtCodecVencSettings_VencCBR::InternalSwap(NvtCodecVencSettings_VencCBR* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR, _impl_.ipweight_)
      + sizeof(NvtCodecVencSettings_VencCBR::_impl_.ipweight_)
      - PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencCBR, _impl_.iqp_)>(
          reinterpret_cast<char*>(&_impl_.iqp_),
          reinterpret_cast<char*>(&other->_impl_.iqp_));
}

::google::protobuf::Metadata NvtCodecVencSettings_VencCBR::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_cameractl_2eproto_getter,
                                   &descriptor_table_cameractl_2eproto_once,
                                   file_level_metadata_cameractl_2eproto[3]);
}
// ===================================================================

class NvtCodecVencSettings_VencVBR::_Internal {
 public:
  using HasBits = decltype(std::declval<NvtCodecVencSettings_VencVBR>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencVBR, _impl_._has_bits_);
};

NvtCodecVencSettings_VencVBR::NvtCodecVencSettings_VencVBR(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NvtCodecVencSettings.VencVBR)
}
inline PROTOBUF_NDEBUG_INLINE NvtCodecVencSettings_VencVBR::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

NvtCodecVencSettings_VencVBR::NvtCodecVencSettings_VencVBR(
    ::google::protobuf::Arena* arena,
    const NvtCodecVencSettings_VencVBR& from)
    : ::google::protobuf::Message(arena) {
  NvtCodecVencSettings_VencVBR* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.cbrsettings_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_VencCBR>(
                              arena, *from._impl_.cbrsettings_)
                        : nullptr;
  _impl_.changepos_ = from._impl_.changepos_;

  // @@protoc_insertion_point(copy_constructor:NvtCodecVencSettings.VencVBR)
}
inline PROTOBUF_NDEBUG_INLINE NvtCodecVencSettings_VencVBR::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NvtCodecVencSettings_VencVBR::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cbrsettings_),
           0,
           offsetof(Impl_, changepos_) -
               offsetof(Impl_, cbrsettings_) +
               sizeof(Impl_::changepos_));
}
NvtCodecVencSettings_VencVBR::~NvtCodecVencSettings_VencVBR() {
  // @@protoc_insertion_point(destructor:NvtCodecVencSettings.VencVBR)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NvtCodecVencSettings_VencVBR::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.cbrsettings_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NvtCodecVencSettings_VencVBR::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencVBR, _impl_._cached_size_),
              false,
          },
          &NvtCodecVencSettings_VencVBR::MergeImpl,
          &NvtCodecVencSettings_VencVBR::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void NvtCodecVencSettings_VencVBR::Clear() {
// @@protoc_insertion_point(message_clear_start:NvtCodecVencSettings.VencVBR)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.cbrsettings_ != nullptr);
    _impl_.cbrsettings_->Clear();
  }
  _impl_.changepos_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NvtCodecVencSettings_VencVBR::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> NvtCodecVencSettings_VencVBR::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencVBR, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NvtCodecVencSettings_VencVBR_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NvtCodecVencSettings_VencVBR>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 changePos = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencVBR, _impl_.changepos_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencVBR, _impl_.changepos_)}},
    // .NvtCodecVencSettings.VencCBR cbrSettings = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencVBR, _impl_.cbrsettings_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .NvtCodecVencSettings.VencCBR cbrSettings = 1;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencVBR, _impl_.cbrsettings_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 changePos = 2;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencVBR, _impl_.changepos_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NvtCodecVencSettings_VencCBR>()},
  }}, {{
  }},
};

::uint8_t* NvtCodecVencSettings_VencVBR::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NvtCodecVencSettings.VencVBR)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .NvtCodecVencSettings.VencCBR cbrSettings = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.cbrsettings_, _impl_.cbrsettings_->GetCachedSize(), target, stream);
  }

  // uint32 changePos = 2;
  if (this->_internal_changepos() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_changepos(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NvtCodecVencSettings.VencVBR)
  return target;
}

::size_t NvtCodecVencSettings_VencVBR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NvtCodecVencSettings.VencVBR)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .NvtCodecVencSettings.VencCBR cbrSettings = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cbrsettings_);
  }

  // uint32 changePos = 2;
  if (this->_internal_changepos() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_changepos());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NvtCodecVencSettings_VencVBR::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NvtCodecVencSettings_VencVBR*>(&to_msg);
  auto& from = static_cast<const NvtCodecVencSettings_VencVBR&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:NvtCodecVencSettings.VencVBR)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.cbrsettings_ != nullptr);
    if (_this->_impl_.cbrsettings_ == nullptr) {
      _this->_impl_.cbrsettings_ =
          ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_VencCBR>(arena, *from._impl_.cbrsettings_);
    } else {
      _this->_impl_.cbrsettings_->MergeFrom(*from._impl_.cbrsettings_);
    }
  }
  if (from._internal_changepos() != 0) {
    _this->_impl_.changepos_ = from._impl_.changepos_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NvtCodecVencSettings_VencVBR::CopyFrom(const NvtCodecVencSettings_VencVBR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NvtCodecVencSettings.VencVBR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NvtCodecVencSettings_VencVBR::IsInitialized() const {
  return true;
}

void NvtCodecVencSettings_VencVBR::InternalSwap(NvtCodecVencSettings_VencVBR* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencVBR, _impl_.changepos_)
      + sizeof(NvtCodecVencSettings_VencVBR::_impl_.changepos_)
      - PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencVBR, _impl_.cbrsettings_)>(
          reinterpret_cast<char*>(&_impl_.cbrsettings_),
          reinterpret_cast<char*>(&other->_impl_.cbrsettings_));
}

::google::protobuf::Metadata NvtCodecVencSettings_VencVBR::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_cameractl_2eproto_getter,
                                   &descriptor_table_cameractl_2eproto_once,
                                   file_level_metadata_cameractl_2eproto[4]);
}
// ===================================================================

class NvtCodecVencSettings_VencEVBR::_Internal {
 public:
  using HasBits = decltype(std::declval<NvtCodecVencSettings_VencEVBR>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_._has_bits_);
};

NvtCodecVencSettings_VencEVBR::NvtCodecVencSettings_VencEVBR(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NvtCodecVencSettings.VencEVBR)
}
inline PROTOBUF_NDEBUG_INLINE NvtCodecVencSettings_VencEVBR::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

NvtCodecVencSettings_VencEVBR::NvtCodecVencSettings_VencEVBR(
    ::google::protobuf::Arena* arena,
    const NvtCodecVencSettings_VencEVBR& from)
    : ::google::protobuf::Message(arena) {
  NvtCodecVencSettings_VencEVBR* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.cbrsettings_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_VencCBR>(
                              arena, *from._impl_.cbrsettings_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, keypperiod_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, keypperiod_),
           offsetof(Impl_, keyppsnrcnd_) -
               offsetof(Impl_, keypperiod_) +
               sizeof(Impl_::keyppsnrcnd_));

  // @@protoc_insertion_point(copy_constructor:NvtCodecVencSettings.VencEVBR)
}
inline PROTOBUF_NDEBUG_INLINE NvtCodecVencSettings_VencEVBR::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NvtCodecVencSettings_VencEVBR::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cbrsettings_),
           0,
           offsetof(Impl_, keyppsnrcnd_) -
               offsetof(Impl_, cbrsettings_) +
               sizeof(Impl_::keyppsnrcnd_));
}
NvtCodecVencSettings_VencEVBR::~NvtCodecVencSettings_VencEVBR() {
  // @@protoc_insertion_point(destructor:NvtCodecVencSettings.VencEVBR)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NvtCodecVencSettings_VencEVBR::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.cbrsettings_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NvtCodecVencSettings_VencEVBR::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_._cached_size_),
              false,
          },
          &NvtCodecVencSettings_VencEVBR::MergeImpl,
          &NvtCodecVencSettings_VencEVBR::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void NvtCodecVencSettings_VencEVBR::Clear() {
// @@protoc_insertion_point(message_clear_start:NvtCodecVencSettings.VencEVBR)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.cbrsettings_ != nullptr);
    _impl_.cbrsettings_->Clear();
  }
  ::memset(&_impl_.keypperiod_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.keyppsnrcnd_) -
      reinterpret_cast<char*>(&_impl_.keypperiod_)) + sizeof(_impl_.keyppsnrcnd_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NvtCodecVencSettings_VencEVBR::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 0, 2> NvtCodecVencSettings_VencEVBR::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NvtCodecVencSettings_VencEVBR_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NvtCodecVencSettings_VencEVBR>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .NvtCodecVencSettings.VencCBR cbrSettings = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_.cbrsettings_)}},
    // int32 keyPPeriod = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencEVBR, _impl_.keypperiod_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_.keypperiod_)}},
    // int32 keyPWeight = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencEVBR, _impl_.keypweight_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_.keypweight_)}},
    // int32 motionAQStrength = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencEVBR, _impl_.motionaqstrength_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_.motionaqstrength_)}},
    // uint32 stillFrameCnt = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencEVBR, _impl_.stillframecnt_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_.stillframecnt_)}},
    // uint32 motionRatioThd = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencEVBR, _impl_.motionratiothd_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_.motionratiothd_)}},
    // uint32 IPsnrCnd = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencEVBR, _impl_.ipsnrcnd_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_.ipsnrcnd_)}},
    // uint32 PPsnrCnd = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencEVBR, _impl_.ppsnrcnd_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_.ppsnrcnd_)}},
    // uint32 KeyPPsnrCnd = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencEVBR, _impl_.keyppsnrcnd_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_.keyppsnrcnd_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .NvtCodecVencSettings.VencCBR cbrSettings = 1;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_.cbrsettings_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 keyPPeriod = 2;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_.keypperiod_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 keyPWeight = 3;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_.keypweight_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 motionAQStrength = 4;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_.motionaqstrength_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // uint32 stillFrameCnt = 5;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_.stillframecnt_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 motionRatioThd = 6;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_.motionratiothd_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 IPsnrCnd = 7;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_.ipsnrcnd_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 PPsnrCnd = 8;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_.ppsnrcnd_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 KeyPPsnrCnd = 9;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_.keyppsnrcnd_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NvtCodecVencSettings_VencCBR>()},
  }}, {{
  }},
};

::uint8_t* NvtCodecVencSettings_VencEVBR::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NvtCodecVencSettings.VencEVBR)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .NvtCodecVencSettings.VencCBR cbrSettings = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.cbrsettings_, _impl_.cbrsettings_->GetCachedSize(), target, stream);
  }

  // int32 keyPPeriod = 2;
  if (this->_internal_keypperiod() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_keypperiod(), target);
  }

  // int32 keyPWeight = 3;
  if (this->_internal_keypweight() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_keypweight(), target);
  }

  // int32 motionAQStrength = 4;
  if (this->_internal_motionaqstrength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_motionaqstrength(), target);
  }

  // uint32 stillFrameCnt = 5;
  if (this->_internal_stillframecnt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_stillframecnt(), target);
  }

  // uint32 motionRatioThd = 6;
  if (this->_internal_motionratiothd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_motionratiothd(), target);
  }

  // uint32 IPsnrCnd = 7;
  if (this->_internal_ipsnrcnd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_ipsnrcnd(), target);
  }

  // uint32 PPsnrCnd = 8;
  if (this->_internal_ppsnrcnd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_ppsnrcnd(), target);
  }

  // uint32 KeyPPsnrCnd = 9;
  if (this->_internal_keyppsnrcnd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this->_internal_keyppsnrcnd(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NvtCodecVencSettings.VencEVBR)
  return target;
}

::size_t NvtCodecVencSettings_VencEVBR::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NvtCodecVencSettings.VencEVBR)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .NvtCodecVencSettings.VencCBR cbrSettings = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cbrsettings_);
  }

  // int32 keyPPeriod = 2;
  if (this->_internal_keypperiod() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_keypperiod());
  }

  // int32 keyPWeight = 3;
  if (this->_internal_keypweight() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_keypweight());
  }

  // int32 motionAQStrength = 4;
  if (this->_internal_motionaqstrength() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_motionaqstrength());
  }

  // uint32 stillFrameCnt = 5;
  if (this->_internal_stillframecnt() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_stillframecnt());
  }

  // uint32 motionRatioThd = 6;
  if (this->_internal_motionratiothd() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_motionratiothd());
  }

  // uint32 IPsnrCnd = 7;
  if (this->_internal_ipsnrcnd() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_ipsnrcnd());
  }

  // uint32 PPsnrCnd = 8;
  if (this->_internal_ppsnrcnd() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_ppsnrcnd());
  }

  // uint32 KeyPPsnrCnd = 9;
  if (this->_internal_keyppsnrcnd() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_keyppsnrcnd());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NvtCodecVencSettings_VencEVBR::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NvtCodecVencSettings_VencEVBR*>(&to_msg);
  auto& from = static_cast<const NvtCodecVencSettings_VencEVBR&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:NvtCodecVencSettings.VencEVBR)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.cbrsettings_ != nullptr);
    if (_this->_impl_.cbrsettings_ == nullptr) {
      _this->_impl_.cbrsettings_ =
          ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_VencCBR>(arena, *from._impl_.cbrsettings_);
    } else {
      _this->_impl_.cbrsettings_->MergeFrom(*from._impl_.cbrsettings_);
    }
  }
  if (from._internal_keypperiod() != 0) {
    _this->_impl_.keypperiod_ = from._impl_.keypperiod_;
  }
  if (from._internal_keypweight() != 0) {
    _this->_impl_.keypweight_ = from._impl_.keypweight_;
  }
  if (from._internal_motionaqstrength() != 0) {
    _this->_impl_.motionaqstrength_ = from._impl_.motionaqstrength_;
  }
  if (from._internal_stillframecnt() != 0) {
    _this->_impl_.stillframecnt_ = from._impl_.stillframecnt_;
  }
  if (from._internal_motionratiothd() != 0) {
    _this->_impl_.motionratiothd_ = from._impl_.motionratiothd_;
  }
  if (from._internal_ipsnrcnd() != 0) {
    _this->_impl_.ipsnrcnd_ = from._impl_.ipsnrcnd_;
  }
  if (from._internal_ppsnrcnd() != 0) {
    _this->_impl_.ppsnrcnd_ = from._impl_.ppsnrcnd_;
  }
  if (from._internal_keyppsnrcnd() != 0) {
    _this->_impl_.keyppsnrcnd_ = from._impl_.keyppsnrcnd_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NvtCodecVencSettings_VencEVBR::CopyFrom(const NvtCodecVencSettings_VencEVBR& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NvtCodecVencSettings.VencEVBR)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NvtCodecVencSettings_VencEVBR::IsInitialized() const {
  return true;
}

void NvtCodecVencSettings_VencEVBR::InternalSwap(NvtCodecVencSettings_VencEVBR* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_.keyppsnrcnd_)
      + sizeof(NvtCodecVencSettings_VencEVBR::_impl_.keyppsnrcnd_)
      - PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencEVBR, _impl_.cbrsettings_)>(
          reinterpret_cast<char*>(&_impl_.cbrsettings_),
          reinterpret_cast<char*>(&other->_impl_.cbrsettings_));
}

::google::protobuf::Metadata NvtCodecVencSettings_VencEVBR::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_cameractl_2eproto_getter,
                                   &descriptor_table_cameractl_2eproto_once,
                                   file_level_metadata_cameractl_2eproto[5]);
}
// ===================================================================

class NvtCodecVencSettings_VencNoneBRC::_Internal {
 public:
};

NvtCodecVencSettings_VencNoneBRC::NvtCodecVencSettings_VencNoneBRC(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NvtCodecVencSettings.VencNoneBRC)
}
NvtCodecVencSettings_VencNoneBRC::NvtCodecVencSettings_VencNoneBRC(
    ::google::protobuf::Arena* arena, const NvtCodecVencSettings_VencNoneBRC& from)
    : NvtCodecVencSettings_VencNoneBRC(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NvtCodecVencSettings_VencNoneBRC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NvtCodecVencSettings_VencNoneBRC::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, framerate_),
           0,
           offsetof(Impl_, byterate_) -
               offsetof(Impl_, framerate_) +
               sizeof(Impl_::byterate_));
}
NvtCodecVencSettings_VencNoneBRC::~NvtCodecVencSettings_VencNoneBRC() {
  // @@protoc_insertion_point(destructor:NvtCodecVencSettings.VencNoneBRC)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NvtCodecVencSettings_VencNoneBRC::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NvtCodecVencSettings_VencNoneBRC::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencNoneBRC, _impl_._cached_size_),
              false,
          },
          &NvtCodecVencSettings_VencNoneBRC::MergeImpl,
          &NvtCodecVencSettings_VencNoneBRC::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void NvtCodecVencSettings_VencNoneBRC::Clear() {
// @@protoc_insertion_point(message_clear_start:NvtCodecVencSettings.VencNoneBRC)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.framerate_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.byterate_) -
      reinterpret_cast<char*>(&_impl_.framerate_)) + sizeof(_impl_.byterate_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NvtCodecVencSettings_VencNoneBRC::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> NvtCodecVencSettings_VencNoneBRC::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NvtCodecVencSettings_VencNoneBRC_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NvtCodecVencSettings_VencNoneBRC>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 frameRate = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencNoneBRC, _impl_.framerate_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencNoneBRC, _impl_.framerate_)}},
    // uint32 gop = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencNoneBRC, _impl_.gop_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencNoneBRC, _impl_.gop_)}},
    // uint32 byterate = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencNoneBRC, _impl_.byterate_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencNoneBRC, _impl_.byterate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 frameRate = 1;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencNoneBRC, _impl_.framerate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 gop = 2;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencNoneBRC, _impl_.gop_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 byterate = 3;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencNoneBRC, _impl_.byterate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* NvtCodecVencSettings_VencNoneBRC::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NvtCodecVencSettings.VencNoneBRC)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 frameRate = 1;
  if (this->_internal_framerate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_framerate(), target);
  }

  // uint32 gop = 2;
  if (this->_internal_gop() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_gop(), target);
  }

  // uint32 byterate = 3;
  if (this->_internal_byterate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_byterate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NvtCodecVencSettings.VencNoneBRC)
  return target;
}

::size_t NvtCodecVencSettings_VencNoneBRC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NvtCodecVencSettings.VencNoneBRC)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 frameRate = 1;
  if (this->_internal_framerate() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_framerate());
  }

  // uint32 gop = 2;
  if (this->_internal_gop() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_gop());
  }

  // uint32 byterate = 3;
  if (this->_internal_byterate() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_byterate());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NvtCodecVencSettings_VencNoneBRC::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NvtCodecVencSettings_VencNoneBRC*>(&to_msg);
  auto& from = static_cast<const NvtCodecVencSettings_VencNoneBRC&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NvtCodecVencSettings.VencNoneBRC)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_framerate() != 0) {
    _this->_impl_.framerate_ = from._impl_.framerate_;
  }
  if (from._internal_gop() != 0) {
    _this->_impl_.gop_ = from._impl_.gop_;
  }
  if (from._internal_byterate() != 0) {
    _this->_impl_.byterate_ = from._impl_.byterate_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NvtCodecVencSettings_VencNoneBRC::CopyFrom(const NvtCodecVencSettings_VencNoneBRC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NvtCodecVencSettings.VencNoneBRC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NvtCodecVencSettings_VencNoneBRC::IsInitialized() const {
  return true;
}

void NvtCodecVencSettings_VencNoneBRC::InternalSwap(NvtCodecVencSettings_VencNoneBRC* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencNoneBRC, _impl_.byterate_)
      + sizeof(NvtCodecVencSettings_VencNoneBRC::_impl_.byterate_)
      - PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencNoneBRC, _impl_.framerate_)>(
          reinterpret_cast<char*>(&_impl_.framerate_),
          reinterpret_cast<char*>(&other->_impl_.framerate_));
}

::google::protobuf::Metadata NvtCodecVencSettings_VencNoneBRC::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_cameractl_2eproto_getter,
                                   &descriptor_table_cameractl_2eproto_once,
                                   file_level_metadata_cameractl_2eproto[6]);
}
// ===================================================================

class NvtCodecVencSettings_VencFIXQP::_Internal {
 public:
};

NvtCodecVencSettings_VencFIXQP::NvtCodecVencSettings_VencFIXQP(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NvtCodecVencSettings.VencFIXQP)
}
NvtCodecVencSettings_VencFIXQP::NvtCodecVencSettings_VencFIXQP(
    ::google::protobuf::Arena* arena, const NvtCodecVencSettings_VencFIXQP& from)
    : NvtCodecVencSettings_VencFIXQP(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NvtCodecVencSettings_VencFIXQP::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NvtCodecVencSettings_VencFIXQP::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, byterate_),
           0,
           offsetof(Impl_, pfixqp_) -
               offsetof(Impl_, byterate_) +
               sizeof(Impl_::pfixqp_));
}
NvtCodecVencSettings_VencFIXQP::~NvtCodecVencSettings_VencFIXQP() {
  // @@protoc_insertion_point(destructor:NvtCodecVencSettings.VencFIXQP)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NvtCodecVencSettings_VencFIXQP::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NvtCodecVencSettings_VencFIXQP::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencFIXQP, _impl_._cached_size_),
              false,
          },
          &NvtCodecVencSettings_VencFIXQP::MergeImpl,
          &NvtCodecVencSettings_VencFIXQP::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void NvtCodecVencSettings_VencFIXQP::Clear() {
// @@protoc_insertion_point(message_clear_start:NvtCodecVencSettings.VencFIXQP)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.byterate_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.pfixqp_) -
      reinterpret_cast<char*>(&_impl_.byterate_)) + sizeof(_impl_.pfixqp_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NvtCodecVencSettings_VencFIXQP::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> NvtCodecVencSettings_VencFIXQP::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NvtCodecVencSettings_VencFIXQP_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NvtCodecVencSettings_VencFIXQP>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 byterate = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencFIXQP, _impl_.byterate_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencFIXQP, _impl_.byterate_)}},
    // uint32 framerate = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencFIXQP, _impl_.framerate_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencFIXQP, _impl_.framerate_)}},
    // uint32 gop = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencFIXQP, _impl_.gop_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencFIXQP, _impl_.gop_)}},
    // uint32 IFixQP = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencFIXQP, _impl_.ifixqp_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencFIXQP, _impl_.ifixqp_)}},
    // uint32 PFixQP = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_VencFIXQP, _impl_.pfixqp_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencFIXQP, _impl_.pfixqp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 byterate = 1;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencFIXQP, _impl_.byterate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 framerate = 2;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencFIXQP, _impl_.framerate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 gop = 3;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencFIXQP, _impl_.gop_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 IFixQP = 4;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencFIXQP, _impl_.ifixqp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 PFixQP = 5;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencFIXQP, _impl_.pfixqp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* NvtCodecVencSettings_VencFIXQP::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NvtCodecVencSettings.VencFIXQP)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 byterate = 1;
  if (this->_internal_byterate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_byterate(), target);
  }

  // uint32 framerate = 2;
  if (this->_internal_framerate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_framerate(), target);
  }

  // uint32 gop = 3;
  if (this->_internal_gop() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_gop(), target);
  }

  // uint32 IFixQP = 4;
  if (this->_internal_ifixqp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_ifixqp(), target);
  }

  // uint32 PFixQP = 5;
  if (this->_internal_pfixqp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_pfixqp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NvtCodecVencSettings.VencFIXQP)
  return target;
}

::size_t NvtCodecVencSettings_VencFIXQP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NvtCodecVencSettings.VencFIXQP)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 byterate = 1;
  if (this->_internal_byterate() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_byterate());
  }

  // uint32 framerate = 2;
  if (this->_internal_framerate() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_framerate());
  }

  // uint32 gop = 3;
  if (this->_internal_gop() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_gop());
  }

  // uint32 IFixQP = 4;
  if (this->_internal_ifixqp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_ifixqp());
  }

  // uint32 PFixQP = 5;
  if (this->_internal_pfixqp() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_pfixqp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NvtCodecVencSettings_VencFIXQP::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NvtCodecVencSettings_VencFIXQP*>(&to_msg);
  auto& from = static_cast<const NvtCodecVencSettings_VencFIXQP&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NvtCodecVencSettings.VencFIXQP)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_byterate() != 0) {
    _this->_impl_.byterate_ = from._impl_.byterate_;
  }
  if (from._internal_framerate() != 0) {
    _this->_impl_.framerate_ = from._impl_.framerate_;
  }
  if (from._internal_gop() != 0) {
    _this->_impl_.gop_ = from._impl_.gop_;
  }
  if (from._internal_ifixqp() != 0) {
    _this->_impl_.ifixqp_ = from._impl_.ifixqp_;
  }
  if (from._internal_pfixqp() != 0) {
    _this->_impl_.pfixqp_ = from._impl_.pfixqp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NvtCodecVencSettings_VencFIXQP::CopyFrom(const NvtCodecVencSettings_VencFIXQP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NvtCodecVencSettings.VencFIXQP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NvtCodecVencSettings_VencFIXQP::IsInitialized() const {
  return true;
}

void NvtCodecVencSettings_VencFIXQP::InternalSwap(NvtCodecVencSettings_VencFIXQP* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencFIXQP, _impl_.pfixqp_)
      + sizeof(NvtCodecVencSettings_VencFIXQP::_impl_.pfixqp_)
      - PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_VencFIXQP, _impl_.byterate_)>(
          reinterpret_cast<char*>(&_impl_.byterate_),
          reinterpret_cast<char*>(&other->_impl_.byterate_));
}

::google::protobuf::Metadata NvtCodecVencSettings_VencFIXQP::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_cameractl_2eproto_getter,
                                   &descriptor_table_cameractl_2eproto_once,
                                   file_level_metadata_cameractl_2eproto[7]);
}
// ===================================================================

class NvtCodecVencSettings_AQSettings::_Internal {
 public:
};

NvtCodecVencSettings_AQSettings::NvtCodecVencSettings_AQSettings(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NvtCodecVencSettings.AQSettings)
}
NvtCodecVencSettings_AQSettings::NvtCodecVencSettings_AQSettings(
    ::google::protobuf::Arena* arena, const NvtCodecVencSettings_AQSettings& from)
    : NvtCodecVencSettings_AQSettings(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NvtCodecVencSettings_AQSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NvtCodecVencSettings_AQSettings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, aqstr_),
           0,
           offsetof(Impl_, sraqconstaslog2_) -
               offsetof(Impl_, aqstr_) +
               sizeof(Impl_::sraqconstaslog2_));
}
NvtCodecVencSettings_AQSettings::~NvtCodecVencSettings_AQSettings() {
  // @@protoc_insertion_point(destructor:NvtCodecVencSettings.AQSettings)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NvtCodecVencSettings_AQSettings::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NvtCodecVencSettings_AQSettings::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_AQSettings, _impl_._cached_size_),
              false,
          },
          &NvtCodecVencSettings_AQSettings::MergeImpl,
          &NvtCodecVencSettings_AQSettings::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void NvtCodecVencSettings_AQSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:NvtCodecVencSettings.AQSettings)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.aqstr_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.sraqconstaslog2_) -
      reinterpret_cast<char*>(&_impl_.aqstr_)) + sizeof(_impl_.sraqconstaslog2_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NvtCodecVencSettings_AQSettings::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> NvtCodecVencSettings_AQSettings::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NvtCodecVencSettings_AQSettings_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NvtCodecVencSettings_AQSettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 aqStr = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_AQSettings, _impl_.aqstr_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_AQSettings, _impl_.aqstr_)}},
    // int32 sraqInitAslog2 = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_AQSettings, _impl_.sraqinitaslog2_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_AQSettings, _impl_.sraqinitaslog2_)}},
    // int32 maxSraq = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_AQSettings, _impl_.maxsraq_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_AQSettings, _impl_.maxsraq_)}},
    // int32 minSraq = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_AQSettings, _impl_.minsraq_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_AQSettings, _impl_.minsraq_)}},
    // int32 sraqConstAslog2 = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_AQSettings, _impl_.sraqconstaslog2_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_AQSettings, _impl_.sraqconstaslog2_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 aqStr = 1;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_AQSettings, _impl_.aqstr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // int32 sraqInitAslog2 = 2;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_AQSettings, _impl_.sraqinitaslog2_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 maxSraq = 3;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_AQSettings, _impl_.maxsraq_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 minSraq = 4;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_AQSettings, _impl_.minsraq_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 sraqConstAslog2 = 5;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_AQSettings, _impl_.sraqconstaslog2_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* NvtCodecVencSettings_AQSettings::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NvtCodecVencSettings.AQSettings)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 aqStr = 1;
  if (this->_internal_aqstr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_aqstr(), target);
  }

  // int32 sraqInitAslog2 = 2;
  if (this->_internal_sraqinitaslog2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_sraqinitaslog2(), target);
  }

  // int32 maxSraq = 3;
  if (this->_internal_maxsraq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_maxsraq(), target);
  }

  // int32 minSraq = 4;
  if (this->_internal_minsraq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_minsraq(), target);
  }

  // int32 sraqConstAslog2 = 5;
  if (this->_internal_sraqconstaslog2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_sraqconstaslog2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NvtCodecVencSettings.AQSettings)
  return target;
}

::size_t NvtCodecVencSettings_AQSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NvtCodecVencSettings.AQSettings)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 aqStr = 1;
  if (this->_internal_aqstr() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_aqstr());
  }

  // int32 sraqInitAslog2 = 2;
  if (this->_internal_sraqinitaslog2() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_sraqinitaslog2());
  }

  // int32 maxSraq = 3;
  if (this->_internal_maxsraq() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_maxsraq());
  }

  // int32 minSraq = 4;
  if (this->_internal_minsraq() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_minsraq());
  }

  // int32 sraqConstAslog2 = 5;
  if (this->_internal_sraqconstaslog2() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_sraqconstaslog2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NvtCodecVencSettings_AQSettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NvtCodecVencSettings_AQSettings*>(&to_msg);
  auto& from = static_cast<const NvtCodecVencSettings_AQSettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NvtCodecVencSettings.AQSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_aqstr() != 0) {
    _this->_impl_.aqstr_ = from._impl_.aqstr_;
  }
  if (from._internal_sraqinitaslog2() != 0) {
    _this->_impl_.sraqinitaslog2_ = from._impl_.sraqinitaslog2_;
  }
  if (from._internal_maxsraq() != 0) {
    _this->_impl_.maxsraq_ = from._impl_.maxsraq_;
  }
  if (from._internal_minsraq() != 0) {
    _this->_impl_.minsraq_ = from._impl_.minsraq_;
  }
  if (from._internal_sraqconstaslog2() != 0) {
    _this->_impl_.sraqconstaslog2_ = from._impl_.sraqconstaslog2_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NvtCodecVencSettings_AQSettings::CopyFrom(const NvtCodecVencSettings_AQSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NvtCodecVencSettings.AQSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NvtCodecVencSettings_AQSettings::IsInitialized() const {
  return true;
}

void NvtCodecVencSettings_AQSettings::InternalSwap(NvtCodecVencSettings_AQSettings* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_AQSettings, _impl_.sraqconstaslog2_)
      + sizeof(NvtCodecVencSettings_AQSettings::_impl_.sraqconstaslog2_)
      - PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_AQSettings, _impl_.aqstr_)>(
          reinterpret_cast<char*>(&_impl_.aqstr_),
          reinterpret_cast<char*>(&other->_impl_.aqstr_));
}

::google::protobuf::Metadata NvtCodecVencSettings_AQSettings::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_cameractl_2eproto_getter,
                                   &descriptor_table_cameractl_2eproto_once,
                                   file_level_metadata_cameractl_2eproto[8]);
}
// ===================================================================

class NvtCodecVencSettings_LTRSettings::_Internal {
 public:
};

NvtCodecVencSettings_LTRSettings::NvtCodecVencSettings_LTRSettings(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NvtCodecVencSettings.LTRSettings)
}
NvtCodecVencSettings_LTRSettings::NvtCodecVencSettings_LTRSettings(
    ::google::protobuf::Arena* arena, const NvtCodecVencSettings_LTRSettings& from)
    : NvtCodecVencSettings_LTRSettings(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NvtCodecVencSettings_LTRSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NvtCodecVencSettings_LTRSettings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, interval_),
           0,
           offsetof(Impl_, preref_) -
               offsetof(Impl_, interval_) +
               sizeof(Impl_::preref_));
}
NvtCodecVencSettings_LTRSettings::~NvtCodecVencSettings_LTRSettings() {
  // @@protoc_insertion_point(destructor:NvtCodecVencSettings.LTRSettings)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NvtCodecVencSettings_LTRSettings::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NvtCodecVencSettings_LTRSettings::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_LTRSettings, _impl_._cached_size_),
              false,
          },
          &NvtCodecVencSettings_LTRSettings::MergeImpl,
          &NvtCodecVencSettings_LTRSettings::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void NvtCodecVencSettings_LTRSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:NvtCodecVencSettings.LTRSettings)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.interval_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.preref_) -
      reinterpret_cast<char*>(&_impl_.interval_)) + sizeof(_impl_.preref_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NvtCodecVencSettings_LTRSettings::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> NvtCodecVencSettings_LTRSettings::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NvtCodecVencSettings_LTRSettings_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NvtCodecVencSettings_LTRSettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 preRef = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_LTRSettings, _impl_.preref_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_LTRSettings, _impl_.preref_)}},
    // uint32 interval = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings_LTRSettings, _impl_.interval_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_LTRSettings, _impl_.interval_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 interval = 1;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_LTRSettings, _impl_.interval_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 preRef = 2;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_LTRSettings, _impl_.preref_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* NvtCodecVencSettings_LTRSettings::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NvtCodecVencSettings.LTRSettings)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 interval = 1;
  if (this->_internal_interval() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_interval(), target);
  }

  // uint32 preRef = 2;
  if (this->_internal_preref() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_preref(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NvtCodecVencSettings.LTRSettings)
  return target;
}

::size_t NvtCodecVencSettings_LTRSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NvtCodecVencSettings.LTRSettings)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 interval = 1;
  if (this->_internal_interval() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_interval());
  }

  // uint32 preRef = 2;
  if (this->_internal_preref() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_preref());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NvtCodecVencSettings_LTRSettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NvtCodecVencSettings_LTRSettings*>(&to_msg);
  auto& from = static_cast<const NvtCodecVencSettings_LTRSettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NvtCodecVencSettings.LTRSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_interval() != 0) {
    _this->_impl_.interval_ = from._impl_.interval_;
  }
  if (from._internal_preref() != 0) {
    _this->_impl_.preref_ = from._impl_.preref_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NvtCodecVencSettings_LTRSettings::CopyFrom(const NvtCodecVencSettings_LTRSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NvtCodecVencSettings.LTRSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NvtCodecVencSettings_LTRSettings::IsInitialized() const {
  return true;
}

void NvtCodecVencSettings_LTRSettings::InternalSwap(NvtCodecVencSettings_LTRSettings* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_LTRSettings, _impl_.preref_)
      + sizeof(NvtCodecVencSettings_LTRSettings::_impl_.preref_)
      - PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings_LTRSettings, _impl_.interval_)>(
          reinterpret_cast<char*>(&_impl_.interval_),
          reinterpret_cast<char*>(&other->_impl_.interval_));
}

::google::protobuf::Metadata NvtCodecVencSettings_LTRSettings::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_cameractl_2eproto_getter,
                                   &descriptor_table_cameractl_2eproto_once,
                                   file_level_metadata_cameractl_2eproto[9]);
}
// ===================================================================

class NvtCodecVencSettings::_Internal {
 public:
  using HasBits = decltype(std::declval<NvtCodecVencSettings>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::NvtCodecVencSettings, _impl_._oneof_case_);
};

void NvtCodecVencSettings::set_allocated_nonebrcsettings(::NvtCodecVencSettings_VencNoneBRC* nonebrcsettings) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_brcType();
  if (nonebrcsettings) {
    ::google::protobuf::Arena* submessage_arena = nonebrcsettings->GetArena();
    if (message_arena != submessage_arena) {
      nonebrcsettings = ::google::protobuf::internal::GetOwnedMessage(message_arena, nonebrcsettings, submessage_arena);
    }
    set_has_nonebrcsettings();
    _impl_.brcType_.nonebrcsettings_ = nonebrcsettings;
  }
  // @@protoc_insertion_point(field_set_allocated:NvtCodecVencSettings.noneBrcSettings)
}
void NvtCodecVencSettings::set_allocated_cbrsettings(::NvtCodecVencSettings_VencCBR* cbrsettings) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_brcType();
  if (cbrsettings) {
    ::google::protobuf::Arena* submessage_arena = cbrsettings->GetArena();
    if (message_arena != submessage_arena) {
      cbrsettings = ::google::protobuf::internal::GetOwnedMessage(message_arena, cbrsettings, submessage_arena);
    }
    set_has_cbrsettings();
    _impl_.brcType_.cbrsettings_ = cbrsettings;
  }
  // @@protoc_insertion_point(field_set_allocated:NvtCodecVencSettings.CBRSettings)
}
void NvtCodecVencSettings::set_allocated_vbrsettings(::NvtCodecVencSettings_VencVBR* vbrsettings) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_brcType();
  if (vbrsettings) {
    ::google::protobuf::Arena* submessage_arena = vbrsettings->GetArena();
    if (message_arena != submessage_arena) {
      vbrsettings = ::google::protobuf::internal::GetOwnedMessage(message_arena, vbrsettings, submessage_arena);
    }
    set_has_vbrsettings();
    _impl_.brcType_.vbrsettings_ = vbrsettings;
  }
  // @@protoc_insertion_point(field_set_allocated:NvtCodecVencSettings.VBRSettings)
}
void NvtCodecVencSettings::set_allocated_evbrsettings(::NvtCodecVencSettings_VencEVBR* evbrsettings) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_brcType();
  if (evbrsettings) {
    ::google::protobuf::Arena* submessage_arena = evbrsettings->GetArena();
    if (message_arena != submessage_arena) {
      evbrsettings = ::google::protobuf::internal::GetOwnedMessage(message_arena, evbrsettings, submessage_arena);
    }
    set_has_evbrsettings();
    _impl_.brcType_.evbrsettings_ = evbrsettings;
  }
  // @@protoc_insertion_point(field_set_allocated:NvtCodecVencSettings.EVBRSettings)
}
void NvtCodecVencSettings::set_allocated_fixqpsettings(::NvtCodecVencSettings_VencFIXQP* fixqpsettings) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_brcType();
  if (fixqpsettings) {
    ::google::protobuf::Arena* submessage_arena = fixqpsettings->GetArena();
    if (message_arena != submessage_arena) {
      fixqpsettings = ::google::protobuf::internal::GetOwnedMessage(message_arena, fixqpsettings, submessage_arena);
    }
    set_has_fixqpsettings();
    _impl_.brcType_.fixqpsettings_ = fixqpsettings;
  }
  // @@protoc_insertion_point(field_set_allocated:NvtCodecVencSettings.FIXQPSettings)
}
NvtCodecVencSettings::NvtCodecVencSettings(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NvtCodecVencSettings)
}
inline PROTOBUF_NDEBUG_INLINE NvtCodecVencSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        brcType_{},
        _oneof_case_{from._oneof_case_[0]} {}

NvtCodecVencSettings::NvtCodecVencSettings(
    ::google::protobuf::Arena* arena,
    const NvtCodecVencSettings& from)
    : ::google::protobuf::Message(arena) {
  NvtCodecVencSettings* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.aqsettings_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_AQSettings>(
                              arena, *from._impl_.aqsettings_)
                        : nullptr;
  _impl_.ltrsettings_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_LTRSettings>(
                              arena, *from._impl_.ltrsettings_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, vencnum_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, vencnum_),
           offsetof(Impl_, seienable_) -
               offsetof(Impl_, vencnum_) +
               sizeof(Impl_::seienable_));
  switch (brcType_case()) {
    case BRCTYPE_NOT_SET:
      break;
      case kNoneBrcSettings:
        _impl_.brcType_.nonebrcsettings_ = ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_VencNoneBRC>(arena, *from._impl_.brcType_.nonebrcsettings_);
        break;
      case kCBRSettings:
        _impl_.brcType_.cbrsettings_ = ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_VencCBR>(arena, *from._impl_.brcType_.cbrsettings_);
        break;
      case kVBRSettings:
        _impl_.brcType_.vbrsettings_ = ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_VencVBR>(arena, *from._impl_.brcType_.vbrsettings_);
        break;
      case kEVBRSettings:
        _impl_.brcType_.evbrsettings_ = ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_VencEVBR>(arena, *from._impl_.brcType_.evbrsettings_);
        break;
      case kFIXQPSettings:
        _impl_.brcType_.fixqpsettings_ = ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_VencFIXQP>(arena, *from._impl_.brcType_.fixqpsettings_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:NvtCodecVencSettings)
}
inline PROTOBUF_NDEBUG_INLINE NvtCodecVencSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        brcType_{},
        _oneof_case_{} {}

inline void NvtCodecVencSettings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, aqsettings_),
           0,
           offsetof(Impl_, seienable_) -
               offsetof(Impl_, aqsettings_) +
               sizeof(Impl_::seienable_));
}
NvtCodecVencSettings::~NvtCodecVencSettings() {
  // @@protoc_insertion_point(destructor:NvtCodecVencSettings)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NvtCodecVencSettings::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.aqsettings_;
  delete _impl_.ltrsettings_;
  if (has_brcType()) {
    clear_brcType();
  }
  _impl_.~Impl_();
}

void NvtCodecVencSettings::clear_brcType() {
// @@protoc_insertion_point(one_of_clear_start:NvtCodecVencSettings)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (brcType_case()) {
    case kNoneBrcSettings: {
      if (GetArena() == nullptr) {
        delete _impl_.brcType_.nonebrcsettings_;
      }
      break;
    }
    case kCBRSettings: {
      if (GetArena() == nullptr) {
        delete _impl_.brcType_.cbrsettings_;
      }
      break;
    }
    case kVBRSettings: {
      if (GetArena() == nullptr) {
        delete _impl_.brcType_.vbrsettings_;
      }
      break;
    }
    case kEVBRSettings: {
      if (GetArena() == nullptr) {
        delete _impl_.brcType_.evbrsettings_;
      }
      break;
    }
    case kFIXQPSettings: {
      if (GetArena() == nullptr) {
        delete _impl_.brcType_.fixqpsettings_;
      }
      break;
    }
    case BRCTYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = BRCTYPE_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
NvtCodecVencSettings::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_._cached_size_),
              false,
          },
          &NvtCodecVencSettings::MergeImpl,
          &NvtCodecVencSettings::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void NvtCodecVencSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:NvtCodecVencSettings)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.aqsettings_ != nullptr);
      _impl_.aqsettings_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.ltrsettings_ != nullptr);
      _impl_.ltrsettings_->Clear();
    }
  }
  ::memset(&_impl_.vencnum_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.eformat_) -
      reinterpret_cast<char*>(&_impl_.vencnum_)) + sizeof(_impl_.eformat_));
  _impl_.eprofile_ = 0;
  ::memset(&_impl_.targetwidth_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.seienable_) -
      reinterpret_cast<char*>(&_impl_.targetwidth_)) + sizeof(_impl_.seienable_));
  clear_brcType();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NvtCodecVencSettings::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 17, 7, 0, 2> NvtCodecVencSettings::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_._has_bits_),
    0, // no _extensions_
    18, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294705216,  // skipmap
    offsetof(decltype(_table_), field_entries),
    17,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NvtCodecVencSettings_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NvtCodecVencSettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 VencNum = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings, _impl_.vencnum_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.vencnum_)}},
    // .NvtCodecVencSettings.InputSource eInputSource = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings, _impl_.einputsource_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.einputsource_)}},
    // .NvtCodecVencSettings.Format eFormat = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings, _impl_.eformat_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.eformat_)}},
    // optional .NvtCodecVencSettings.Profile eProfile = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings, _impl_.eprofile_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.eprofile_)}},
    // uint32 TargetWidth = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings, _impl_.targetwidth_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.targetwidth_)}},
    // uint32 TargetHeight = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings, _impl_.targetheight_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.targetheight_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .NvtCodecVencSettings.VencSVCT svctSettings = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings, _impl_.svctsettings_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.svctsettings_)}},
    // bool enableNR = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NvtCodecVencSettings, _impl_.enablenr_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.enablenr_)}},
    // .NvtCodecVencSettings.VencRotation eVencRT = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NvtCodecVencSettings, _impl_.evencrt_), 63>(),
     {120, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.evencrt_)}},
    // optional .NvtCodecVencSettings.AQSettings aqSettings = 16;
    {::_pbi::TcParser::FastMtS2,
     {386, 0, 5, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.aqsettings_)}},
    // .NvtCodecVencSettings.LTRSettings ltrSettings = 17;
    {::_pbi::TcParser::FastMtS2,
     {394, 1, 6, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.ltrsettings_)}},
    // bool SEIEnable = 18;
    {::_pbi::TcParser::FastV8S2,
     {400, 63, 0, PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.seienable_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 VencNum = 1;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.vencnum_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .NvtCodecVencSettings.InputSource eInputSource = 2;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.einputsource_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .NvtCodecVencSettings.Format eFormat = 3;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.eformat_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // optional .NvtCodecVencSettings.Profile eProfile = 4;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.eprofile_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // uint32 TargetWidth = 5;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.targetwidth_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 TargetHeight = 6;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.targetheight_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .NvtCodecVencSettings.VencNoneBRC noneBrcSettings = 8;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.brcType_.nonebrcsettings_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .NvtCodecVencSettings.VencCBR CBRSettings = 9;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.brcType_.cbrsettings_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .NvtCodecVencSettings.VencVBR VBRSettings = 10;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.brcType_.vbrsettings_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .NvtCodecVencSettings.VencEVBR EVBRSettings = 11;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.brcType_.evbrsettings_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .NvtCodecVencSettings.VencFIXQP FIXQPSettings = 12;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.brcType_.fixqpsettings_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .NvtCodecVencSettings.VencSVCT svctSettings = 13;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.svctsettings_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool enableNR = 14;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.enablenr_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .NvtCodecVencSettings.VencRotation eVencRT = 15;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.evencrt_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // optional .NvtCodecVencSettings.AQSettings aqSettings = 16;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.aqsettings_), _Internal::kHasBitsOffset + 0, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .NvtCodecVencSettings.LTRSettings ltrSettings = 17;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.ltrsettings_), _Internal::kHasBitsOffset + 1, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool SEIEnable = 18;
    {PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.seienable_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NvtCodecVencSettings_VencNoneBRC>()},
    {::_pbi::TcParser::GetTable<::NvtCodecVencSettings_VencCBR>()},
    {::_pbi::TcParser::GetTable<::NvtCodecVencSettings_VencVBR>()},
    {::_pbi::TcParser::GetTable<::NvtCodecVencSettings_VencEVBR>()},
    {::_pbi::TcParser::GetTable<::NvtCodecVencSettings_VencFIXQP>()},
    {::_pbi::TcParser::GetTable<::NvtCodecVencSettings_AQSettings>()},
    {::_pbi::TcParser::GetTable<::NvtCodecVencSettings_LTRSettings>()},
  }}, {{
  }},
};

::uint8_t* NvtCodecVencSettings::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NvtCodecVencSettings)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 VencNum = 1;
  if (this->_internal_vencnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_vencnum(), target);
  }

  // .NvtCodecVencSettings.InputSource eInputSource = 2;
  if (this->_internal_einputsource() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_einputsource(), target);
  }

  // .NvtCodecVencSettings.Format eFormat = 3;
  if (this->_internal_eformat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_eformat(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .NvtCodecVencSettings.Profile eProfile = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_eprofile(), target);
  }

  // uint32 TargetWidth = 5;
  if (this->_internal_targetwidth() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_targetwidth(), target);
  }

  // uint32 TargetHeight = 6;
  if (this->_internal_targetheight() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_targetheight(), target);
  }

  switch (brcType_case()) {
    case kNoneBrcSettings: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          8, *_impl_.brcType_.nonebrcsettings_, _impl_.brcType_.nonebrcsettings_->GetCachedSize(), target, stream);
      break;
    }
    case kCBRSettings: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          9, *_impl_.brcType_.cbrsettings_, _impl_.brcType_.cbrsettings_->GetCachedSize(), target, stream);
      break;
    }
    case kVBRSettings: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          10, *_impl_.brcType_.vbrsettings_, _impl_.brcType_.vbrsettings_->GetCachedSize(), target, stream);
      break;
    }
    case kEVBRSettings: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          11, *_impl_.brcType_.evbrsettings_, _impl_.brcType_.evbrsettings_->GetCachedSize(), target, stream);
      break;
    }
    case kFIXQPSettings: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          12, *_impl_.brcType_.fixqpsettings_, _impl_.brcType_.fixqpsettings_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  // .NvtCodecVencSettings.VencSVCT svctSettings = 13;
  if (this->_internal_svctsettings() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        13, this->_internal_svctsettings(), target);
  }

  // bool enableNR = 14;
  if (this->_internal_enablenr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        14, this->_internal_enablenr(), target);
  }

  // .NvtCodecVencSettings.VencRotation eVencRT = 15;
  if (this->_internal_evencrt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        15, this->_internal_evencrt(), target);
  }

  // optional .NvtCodecVencSettings.AQSettings aqSettings = 16;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        16, *_impl_.aqsettings_, _impl_.aqsettings_->GetCachedSize(), target, stream);
  }

  // .NvtCodecVencSettings.LTRSettings ltrSettings = 17;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        17, *_impl_.ltrsettings_, _impl_.ltrsettings_->GetCachedSize(), target, stream);
  }

  // bool SEIEnable = 18;
  if (this->_internal_seienable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        18, this->_internal_seienable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NvtCodecVencSettings)
  return target;
}

::size_t NvtCodecVencSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NvtCodecVencSettings)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .NvtCodecVencSettings.AQSettings aqSettings = 16;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.aqsettings_);
    }

    // .NvtCodecVencSettings.LTRSettings ltrSettings = 17;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.ltrsettings_);
    }

  }
  // uint32 VencNum = 1;
  if (this->_internal_vencnum() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_vencnum());
  }

  // .NvtCodecVencSettings.InputSource eInputSource = 2;
  if (this->_internal_einputsource() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_einputsource());
  }

  // .NvtCodecVencSettings.Format eFormat = 3;
  if (this->_internal_eformat() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_eformat());
  }

  // optional .NvtCodecVencSettings.Profile eProfile = 4;
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_eprofile());
  }

  // uint32 TargetWidth = 5;
  if (this->_internal_targetwidth() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_targetwidth());
  }

  // uint32 TargetHeight = 6;
  if (this->_internal_targetheight() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_targetheight());
  }

  // .NvtCodecVencSettings.VencSVCT svctSettings = 13;
  if (this->_internal_svctsettings() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_svctsettings());
  }

  // .NvtCodecVencSettings.VencRotation eVencRT = 15;
  if (this->_internal_evencrt() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_evencrt());
  }

  // bool enableNR = 14;
  if (this->_internal_enablenr() != 0) {
    total_size += 2;
  }

  // bool SEIEnable = 18;
  if (this->_internal_seienable() != 0) {
    total_size += 3;
  }

  switch (brcType_case()) {
    // .NvtCodecVencSettings.VencNoneBRC noneBrcSettings = 8;
    case kNoneBrcSettings: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.brcType_.nonebrcsettings_);
      break;
    }
    // .NvtCodecVencSettings.VencCBR CBRSettings = 9;
    case kCBRSettings: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.brcType_.cbrsettings_);
      break;
    }
    // .NvtCodecVencSettings.VencVBR VBRSettings = 10;
    case kVBRSettings: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.brcType_.vbrsettings_);
      break;
    }
    // .NvtCodecVencSettings.VencEVBR EVBRSettings = 11;
    case kEVBRSettings: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.brcType_.evbrsettings_);
      break;
    }
    // .NvtCodecVencSettings.VencFIXQP FIXQPSettings = 12;
    case kFIXQPSettings: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.brcType_.fixqpsettings_);
      break;
    }
    case BRCTYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NvtCodecVencSettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NvtCodecVencSettings*>(&to_msg);
  auto& from = static_cast<const NvtCodecVencSettings&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:NvtCodecVencSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.aqsettings_ != nullptr);
      if (_this->_impl_.aqsettings_ == nullptr) {
        _this->_impl_.aqsettings_ =
            ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_AQSettings>(arena, *from._impl_.aqsettings_);
      } else {
        _this->_impl_.aqsettings_->MergeFrom(*from._impl_.aqsettings_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.ltrsettings_ != nullptr);
      if (_this->_impl_.ltrsettings_ == nullptr) {
        _this->_impl_.ltrsettings_ =
            ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_LTRSettings>(arena, *from._impl_.ltrsettings_);
      } else {
        _this->_impl_.ltrsettings_->MergeFrom(*from._impl_.ltrsettings_);
      }
    }
  }
  if (from._internal_vencnum() != 0) {
    _this->_impl_.vencnum_ = from._impl_.vencnum_;
  }
  if (from._internal_einputsource() != 0) {
    _this->_impl_.einputsource_ = from._impl_.einputsource_;
  }
  if (from._internal_eformat() != 0) {
    _this->_impl_.eformat_ = from._impl_.eformat_;
  }
  if (cached_has_bits & 0x00000004u) {
    _this->_impl_.eprofile_ = from._impl_.eprofile_;
  }
  if (from._internal_targetwidth() != 0) {
    _this->_impl_.targetwidth_ = from._impl_.targetwidth_;
  }
  if (from._internal_targetheight() != 0) {
    _this->_impl_.targetheight_ = from._impl_.targetheight_;
  }
  if (from._internal_svctsettings() != 0) {
    _this->_impl_.svctsettings_ = from._impl_.svctsettings_;
  }
  if (from._internal_evencrt() != 0) {
    _this->_impl_.evencrt_ = from._impl_.evencrt_;
  }
  if (from._internal_enablenr() != 0) {
    _this->_impl_.enablenr_ = from._impl_.enablenr_;
  }
  if (from._internal_seienable() != 0) {
    _this->_impl_.seienable_ = from._impl_.seienable_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_brcType();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kNoneBrcSettings: {
        if (oneof_needs_init) {
          _this->_impl_.brcType_.nonebrcsettings_ =
              ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_VencNoneBRC>(arena, *from._impl_.brcType_.nonebrcsettings_);
        } else {
          _this->_impl_.brcType_.nonebrcsettings_->MergeFrom(from._internal_nonebrcsettings());
        }
        break;
      }
      case kCBRSettings: {
        if (oneof_needs_init) {
          _this->_impl_.brcType_.cbrsettings_ =
              ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_VencCBR>(arena, *from._impl_.brcType_.cbrsettings_);
        } else {
          _this->_impl_.brcType_.cbrsettings_->MergeFrom(from._internal_cbrsettings());
        }
        break;
      }
      case kVBRSettings: {
        if (oneof_needs_init) {
          _this->_impl_.brcType_.vbrsettings_ =
              ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_VencVBR>(arena, *from._impl_.brcType_.vbrsettings_);
        } else {
          _this->_impl_.brcType_.vbrsettings_->MergeFrom(from._internal_vbrsettings());
        }
        break;
      }
      case kEVBRSettings: {
        if (oneof_needs_init) {
          _this->_impl_.brcType_.evbrsettings_ =
              ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_VencEVBR>(arena, *from._impl_.brcType_.evbrsettings_);
        } else {
          _this->_impl_.brcType_.evbrsettings_->MergeFrom(from._internal_evbrsettings());
        }
        break;
      }
      case kFIXQPSettings: {
        if (oneof_needs_init) {
          _this->_impl_.brcType_.fixqpsettings_ =
              ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings_VencFIXQP>(arena, *from._impl_.brcType_.fixqpsettings_);
        } else {
          _this->_impl_.brcType_.fixqpsettings_->MergeFrom(from._internal_fixqpsettings());
        }
        break;
      }
      case BRCTYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NvtCodecVencSettings::CopyFrom(const NvtCodecVencSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NvtCodecVencSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NvtCodecVencSettings::IsInitialized() const {
  return true;
}

void NvtCodecVencSettings::InternalSwap(NvtCodecVencSettings* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.seienable_)
      + sizeof(NvtCodecVencSettings::_impl_.seienable_)
      - PROTOBUF_FIELD_OFFSET(NvtCodecVencSettings, _impl_.aqsettings_)>(
          reinterpret_cast<char*>(&_impl_.aqsettings_),
          reinterpret_cast<char*>(&other->_impl_.aqsettings_));
  swap(_impl_.brcType_, other->_impl_.brcType_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata NvtCodecVencSettings::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_cameractl_2eproto_getter,
                                   &descriptor_table_cameractl_2eproto_once,
                                   file_level_metadata_cameractl_2eproto[10]);
}
// ===================================================================

class ISPSettings::_Internal {
 public:
  using HasBits = decltype(std::declval<ISPSettings>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_._has_bits_);
};

ISPSettings::ISPSettings(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ISPSettings)
}
ISPSettings::ISPSettings(
    ::google::protobuf::Arena* arena, const ISPSettings& from)
    : ISPSettings(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ISPSettings::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ISPSettings::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, selectedpreset_),
           0,
           offsetof(Impl_, tnrlevel_) -
               offsetof(Impl_, selectedpreset_) +
               sizeof(Impl_::tnrlevel_));
}
ISPSettings::~ISPSettings() {
  // @@protoc_insertion_point(destructor:ISPSettings)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ISPSettings::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ISPSettings::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_._cached_size_),
              false,
          },
          &ISPSettings::MergeImpl,
          &ISPSettings::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ISPSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:ISPSettings)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.selectedpreset_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.eelevel_) -
        reinterpret_cast<char*>(&_impl_.selectedpreset_)) + sizeof(_impl_.eelevel_));
  }
  _impl_.tnrlevel_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ISPSettings::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 0, 2> ISPSettings::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ISPSettings_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ISPSettings>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .ISPSettings.ISPPreset selectedPreset = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ISPSettings, _impl_.selectedpreset_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_.selectedpreset_)}},
    // optional bool nightMode = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ISPSettings, _impl_.nightmode_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_.nightmode_)}},
    // optional int32 brightness = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ISPSettings, _impl_.brightness_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_.brightness_)}},
    // optional int32 saturation = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ISPSettings, _impl_.saturation_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_.saturation_)}},
    // optional int32 hue = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ISPSettings, _impl_.hue_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_.hue_)}},
    // optional int32 contrast = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ISPSettings, _impl_.contrast_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_.contrast_)}},
    // optional int32 nrLevel = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ISPSettings, _impl_.nrlevel_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_.nrlevel_)}},
    // optional int32 eeLevel = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ISPSettings, _impl_.eelevel_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_.eelevel_)}},
    // optional int32 tnrLevel = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ISPSettings, _impl_.tnrlevel_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_.tnrlevel_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .ISPSettings.ISPPreset selectedPreset = 1;
    {PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_.selectedpreset_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // optional bool nightMode = 2;
    {PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_.nightmode_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 brightness = 3;
    {PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_.brightness_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 saturation = 4;
    {PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_.saturation_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 hue = 5;
    {PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_.hue_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 contrast = 6;
    {PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_.contrast_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 nrLevel = 7;
    {PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_.nrlevel_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 eeLevel = 8;
    {PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_.eelevel_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 tnrLevel = 9;
    {PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_.tnrlevel_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ISPSettings::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ISPSettings)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .ISPSettings.ISPPreset selectedPreset = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_selectedpreset(), target);
  }

  // optional bool nightMode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_nightmode(), target);
  }

  // optional int32 brightness = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_brightness(), target);
  }

  // optional int32 saturation = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_saturation(), target);
  }

  // optional int32 hue = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_hue(), target);
  }

  // optional int32 contrast = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_contrast(), target);
  }

  // optional int32 nrLevel = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_nrlevel(), target);
  }

  // optional int32 eeLevel = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_eelevel(), target);
  }

  // optional int32 tnrLevel = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_tnrlevel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ISPSettings)
  return target;
}

::size_t ISPSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ISPSettings)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .ISPSettings.ISPPreset selectedPreset = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_selectedpreset());
    }

    // optional bool nightMode = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

    // optional int32 brightness = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_brightness());
    }

    // optional int32 saturation = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_saturation());
    }

    // optional int32 hue = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_hue());
    }

    // optional int32 contrast = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_contrast());
    }

    // optional int32 nrLevel = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_nrlevel());
    }

    // optional int32 eeLevel = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_eelevel());
    }

  }
  // optional int32 tnrLevel = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_tnrlevel());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ISPSettings::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ISPSettings*>(&to_msg);
  auto& from = static_cast<const ISPSettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ISPSettings)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.selectedpreset_ = from._impl_.selectedpreset_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.nightmode_ = from._impl_.nightmode_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.brightness_ = from._impl_.brightness_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.saturation_ = from._impl_.saturation_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.hue_ = from._impl_.hue_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.contrast_ = from._impl_.contrast_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.nrlevel_ = from._impl_.nrlevel_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.eelevel_ = from._impl_.eelevel_;
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_impl_.tnrlevel_ = from._impl_.tnrlevel_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ISPSettings::CopyFrom(const ISPSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ISPSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ISPSettings::IsInitialized() const {
  return true;
}

void ISPSettings::InternalSwap(ISPSettings* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_.tnrlevel_)
      + sizeof(ISPSettings::_impl_.tnrlevel_)
      - PROTOBUF_FIELD_OFFSET(ISPSettings, _impl_.selectedpreset_)>(
          reinterpret_cast<char*>(&_impl_.selectedpreset_),
          reinterpret_cast<char*>(&other->_impl_.selectedpreset_));
}

::google::protobuf::Metadata ISPSettings::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_cameractl_2eproto_getter,
                                   &descriptor_table_cameractl_2eproto_once,
                                   file_level_metadata_cameractl_2eproto[11]);
}
// ===================================================================

class UserList::_Internal {
 public:
};

UserList::UserList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UserList)
}
inline PROTOBUF_NDEBUG_INLINE UserList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : username_{visibility, arena, from.username_},
        _cached_size_{0} {}

UserList::UserList(
    ::google::protobuf::Arena* arena,
    const UserList& from)
    : ::google::protobuf::Message(arena) {
  UserList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:UserList)
}
inline PROTOBUF_NDEBUG_INLINE UserList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : username_{visibility, arena},
        _cached_size_{0} {}

inline void UserList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UserList::~UserList() {
  // @@protoc_insertion_point(destructor:UserList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
UserList::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(UserList, _impl_._cached_size_),
              false,
          },
          &UserList::MergeImpl,
          &UserList::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void UserList::Clear() {
// @@protoc_insertion_point(message_clear_start:UserList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 25, 2> UserList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UserList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::UserList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string username = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserList, _impl_.username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string username = 1;
    {PROTOBUF_FIELD_OFFSET(UserList, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\10\10\0\0\0\0\0\0"
    "UserList"
    "username"
  }},
};

::uint8_t* UserList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UserList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string username = 1;
  for (int i = 0, n = this->_internal_username_size(); i < n; ++i) {
    const auto& s = this->_internal_username().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "UserList.username");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserList)
  return target;
}

::size_t UserList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string username = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_username().size());
  for (int i = 0, n = _internal_username().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_username().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void UserList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UserList*>(&to_msg);
  auto& from = static_cast<const UserList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UserList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_username()->MergeFrom(from._internal_username());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserList::CopyFrom(const UserList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserList::IsInitialized() const {
  return true;
}

void UserList::InternalSwap(UserList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.username_.InternalSwap(&other->_impl_.username_);
}

::google::protobuf::Metadata UserList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_cameractl_2eproto_getter,
                                   &descriptor_table_cameractl_2eproto_once,
                                   file_level_metadata_cameractl_2eproto[12]);
}
// ===================================================================

class NewUserData::_Internal {
 public:
  using HasBits = decltype(std::declval<NewUserData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(NewUserData, _impl_._has_bits_);
};

NewUserData::NewUserData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NewUserData)
}
inline PROTOBUF_NDEBUG_INLINE NewUserData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        username_(arena, from.username_),
        password_(arena, from.password_) {}

NewUserData::NewUserData(
    ::google::protobuf::Arena* arena,
    const NewUserData& from)
    : ::google::protobuf::Message(arena) {
  NewUserData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.exists_ = from._impl_.exists_;

  // @@protoc_insertion_point(copy_constructor:NewUserData)
}
inline PROTOBUF_NDEBUG_INLINE NewUserData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        username_(arena),
        password_(arena) {}

inline void NewUserData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.exists_ = {};
}
NewUserData::~NewUserData() {
  // @@protoc_insertion_point(destructor:NewUserData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NewUserData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.username_.Destroy();
  _impl_.password_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NewUserData::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(NewUserData, _impl_._cached_size_),
              false,
          },
          &NewUserData::MergeImpl,
          &NewUserData::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void NewUserData::Clear() {
// @@protoc_insertion_point(message_clear_start:NewUserData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.password_.ClearNonDefaultToEmpty();
  }
  _impl_.exists_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NewUserData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 36, 2> NewUserData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NewUserData, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NewUserData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::NewUserData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool exists = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(NewUserData, _impl_.exists_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(NewUserData, _impl_.exists_)}},
    // string username = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NewUserData, _impl_.username_)}},
    // optional string password = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(NewUserData, _impl_.password_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool exists = 1;
    {PROTOBUF_FIELD_OFFSET(NewUserData, _impl_.exists_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string username = 2;
    {PROTOBUF_FIELD_OFFSET(NewUserData, _impl_.username_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string password = 3;
    {PROTOBUF_FIELD_OFFSET(NewUserData, _impl_.password_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\13\0\10\10\0\0\0\0"
    "NewUserData"
    "username"
    "password"
  }},
};

::uint8_t* NewUserData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NewUserData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool exists = 1;
  if (this->_internal_exists() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_exists(), target);
  }

  // string username = 2;
  if (!this->_internal_username().empty()) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "NewUserData.username");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string password = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_password();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "NewUserData.password");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NewUserData)
  return target;
}

::size_t NewUserData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NewUserData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 2;
  if (!this->_internal_username().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_username());
  }

  // optional string password = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_password());
  }

  // bool exists = 1;
  if (this->_internal_exists() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NewUserData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NewUserData*>(&to_msg);
  auto& from = static_cast<const NewUserData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NewUserData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _this->_internal_set_password(from._internal_password());
  }
  if (from._internal_exists() != 0) {
    _this->_impl_.exists_ = from._impl_.exists_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NewUserData::CopyFrom(const NewUserData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NewUserData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NewUserData::IsInitialized() const {
  return true;
}

void NewUserData::InternalSwap(NewUserData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
        swap(_impl_.exists_, other->_impl_.exists_);
}

::google::protobuf::Metadata NewUserData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_cameractl_2eproto_getter,
                                   &descriptor_table_cameractl_2eproto_once,
                                   file_level_metadata_cameractl_2eproto[13]);
}
// ===================================================================

class ModeSwitchParams::_Internal {
 public:
  using HasBits = decltype(std::declval<ModeSwitchParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ModeSwitchParams, _impl_._has_bits_);
};

ModeSwitchParams::ModeSwitchParams(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ModeSwitchParams)
}
ModeSwitchParams::ModeSwitchParams(
    ::google::protobuf::Arena* arena, const ModeSwitchParams& from)
    : ModeSwitchParams(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ModeSwitchParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ModeSwitchParams::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, irenable_),
           0,
           offsetof(Impl_, mode_) -
               offsetof(Impl_, irenable_) +
               sizeof(Impl_::mode_));
}
ModeSwitchParams::~ModeSwitchParams() {
  // @@protoc_insertion_point(destructor:ModeSwitchParams)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ModeSwitchParams::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ModeSwitchParams::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(ModeSwitchParams, _impl_._cached_size_),
              false,
          },
          &ModeSwitchParams::MergeImpl,
          &ModeSwitchParams::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void ModeSwitchParams::Clear() {
// @@protoc_insertion_point(message_clear_start:ModeSwitchParams)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.irenable_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.mode_) -
        reinterpret_cast<char*>(&_impl_.irenable_)) + sizeof(_impl_.mode_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ModeSwitchParams::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> ModeSwitchParams::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModeSwitchParams, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ModeSwitchParams_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ModeSwitchParams>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .ModeSwitchParams.MSMode mode = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModeSwitchParams, _impl_.mode_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ModeSwitchParams, _impl_.mode_)}},
    // optional bool irEnable = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ModeSwitchParams, _impl_.irenable_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ModeSwitchParams, _impl_.irenable_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional bool irEnable = 1;
    {PROTOBUF_FIELD_OFFSET(ModeSwitchParams, _impl_.irenable_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .ModeSwitchParams.MSMode mode = 2;
    {PROTOBUF_FIELD_OFFSET(ModeSwitchParams, _impl_.mode_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ModeSwitchParams::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ModeSwitchParams)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional bool irEnable = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_irenable(), target);
  }

  // optional .ModeSwitchParams.MSMode mode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ModeSwitchParams)
  return target;
}

::size_t ModeSwitchParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ModeSwitchParams)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool irEnable = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2;
    }

    // optional .ModeSwitchParams.MSMode mode = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_mode());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ModeSwitchParams::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModeSwitchParams*>(&to_msg);
  auto& from = static_cast<const ModeSwitchParams&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ModeSwitchParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.irenable_ = from._impl_.irenable_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.mode_ = from._impl_.mode_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModeSwitchParams::CopyFrom(const ModeSwitchParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ModeSwitchParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ModeSwitchParams::IsInitialized() const {
  return true;
}

void ModeSwitchParams::InternalSwap(ModeSwitchParams* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModeSwitchParams, _impl_.mode_)
      + sizeof(ModeSwitchParams::_impl_.mode_)
      - PROTOBUF_FIELD_OFFSET(ModeSwitchParams, _impl_.irenable_)>(
          reinterpret_cast<char*>(&_impl_.irenable_),
          reinterpret_cast<char*>(&other->_impl_.irenable_));
}

::google::protobuf::Metadata ModeSwitchParams::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_cameractl_2eproto_getter,
                                   &descriptor_table_cameractl_2eproto_once,
                                   file_level_metadata_cameractl_2eproto[14]);
}
// ===================================================================

class CamCtlRequest_vencSettingsSetRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CamCtlRequest_vencSettingsSetRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CamCtlRequest_vencSettingsSetRequest, _impl_._has_bits_);
};

CamCtlRequest_vencSettingsSetRequest::CamCtlRequest_vencSettingsSetRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CamCtlRequest.vencSettingsSetRequest)
}
inline PROTOBUF_NDEBUG_INLINE CamCtlRequest_vencSettingsSetRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CamCtlRequest_vencSettingsSetRequest::CamCtlRequest_vencSettingsSetRequest(
    ::google::protobuf::Arena* arena,
    const CamCtlRequest_vencSettingsSetRequest& from)
    : ::google::protobuf::Message(arena) {
  CamCtlRequest_vencSettingsSetRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.newsettings_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings>(
                              arena, *from._impl_.newsettings_)
                        : nullptr;
  _impl_.tgtvenc_ = from._impl_.tgtvenc_;

  // @@protoc_insertion_point(copy_constructor:CamCtlRequest.vencSettingsSetRequest)
}
inline PROTOBUF_NDEBUG_INLINE CamCtlRequest_vencSettingsSetRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CamCtlRequest_vencSettingsSetRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, newsettings_),
           0,
           offsetof(Impl_, tgtvenc_) -
               offsetof(Impl_, newsettings_) +
               sizeof(Impl_::tgtvenc_));
}
CamCtlRequest_vencSettingsSetRequest::~CamCtlRequest_vencSettingsSetRequest() {
  // @@protoc_insertion_point(destructor:CamCtlRequest.vencSettingsSetRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CamCtlRequest_vencSettingsSetRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.newsettings_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CamCtlRequest_vencSettingsSetRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(CamCtlRequest_vencSettingsSetRequest, _impl_._cached_size_),
              false,
          },
          &CamCtlRequest_vencSettingsSetRequest::MergeImpl,
          &CamCtlRequest_vencSettingsSetRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void CamCtlRequest_vencSettingsSetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CamCtlRequest.vencSettingsSetRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.newsettings_ != nullptr);
    _impl_.newsettings_->Clear();
  }
  _impl_.tgtvenc_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CamCtlRequest_vencSettingsSetRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CamCtlRequest_vencSettingsSetRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CamCtlRequest_vencSettingsSetRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CamCtlRequest_vencSettingsSetRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CamCtlRequest_vencSettingsSetRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .NvtCodecVencSettings newSettings = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CamCtlRequest_vencSettingsSetRequest, _impl_.newsettings_)}},
    // .VencType tgtVenc = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CamCtlRequest_vencSettingsSetRequest, _impl_.tgtvenc_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CamCtlRequest_vencSettingsSetRequest, _impl_.tgtvenc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .VencType tgtVenc = 1;
    {PROTOBUF_FIELD_OFFSET(CamCtlRequest_vencSettingsSetRequest, _impl_.tgtvenc_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .NvtCodecVencSettings newSettings = 2;
    {PROTOBUF_FIELD_OFFSET(CamCtlRequest_vencSettingsSetRequest, _impl_.newsettings_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NvtCodecVencSettings>()},
  }}, {{
  }},
};

::uint8_t* CamCtlRequest_vencSettingsSetRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CamCtlRequest.vencSettingsSetRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .VencType tgtVenc = 1;
  if (this->_internal_tgtvenc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_tgtvenc(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .NvtCodecVencSettings newSettings = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.newsettings_, _impl_.newsettings_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CamCtlRequest.vencSettingsSetRequest)
  return target;
}

::size_t CamCtlRequest_vencSettingsSetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CamCtlRequest.vencSettingsSetRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .NvtCodecVencSettings newSettings = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.newsettings_);
  }

  // .VencType tgtVenc = 1;
  if (this->_internal_tgtvenc() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_tgtvenc());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CamCtlRequest_vencSettingsSetRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CamCtlRequest_vencSettingsSetRequest*>(&to_msg);
  auto& from = static_cast<const CamCtlRequest_vencSettingsSetRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CamCtlRequest.vencSettingsSetRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.newsettings_ != nullptr);
    if (_this->_impl_.newsettings_ == nullptr) {
      _this->_impl_.newsettings_ =
          ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings>(arena, *from._impl_.newsettings_);
    } else {
      _this->_impl_.newsettings_->MergeFrom(*from._impl_.newsettings_);
    }
  }
  if (from._internal_tgtvenc() != 0) {
    _this->_impl_.tgtvenc_ = from._impl_.tgtvenc_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CamCtlRequest_vencSettingsSetRequest::CopyFrom(const CamCtlRequest_vencSettingsSetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CamCtlRequest.vencSettingsSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CamCtlRequest_vencSettingsSetRequest::IsInitialized() const {
  return true;
}

void CamCtlRequest_vencSettingsSetRequest::InternalSwap(CamCtlRequest_vencSettingsSetRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CamCtlRequest_vencSettingsSetRequest, _impl_.tgtvenc_)
      + sizeof(CamCtlRequest_vencSettingsSetRequest::_impl_.tgtvenc_)
      - PROTOBUF_FIELD_OFFSET(CamCtlRequest_vencSettingsSetRequest, _impl_.newsettings_)>(
          reinterpret_cast<char*>(&_impl_.newsettings_),
          reinterpret_cast<char*>(&other->_impl_.newsettings_));
}

::google::protobuf::Metadata CamCtlRequest_vencSettingsSetRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_cameractl_2eproto_getter,
                                   &descriptor_table_cameractl_2eproto_once,
                                   file_level_metadata_cameractl_2eproto[15]);
}
// ===================================================================

class CamCtlRequest_motorMoveRequest::_Internal {
 public:
};

CamCtlRequest_motorMoveRequest::CamCtlRequest_motorMoveRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CamCtlRequest.motorMoveRequest)
}
CamCtlRequest_motorMoveRequest::CamCtlRequest_motorMoveRequest(
    ::google::protobuf::Arena* arena, const CamCtlRequest_motorMoveRequest& from)
    : CamCtlRequest_motorMoveRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CamCtlRequest_motorMoveRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CamCtlRequest_motorMoveRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, motor_),
           0,
           offsetof(Impl_, steps_) -
               offsetof(Impl_, motor_) +
               sizeof(Impl_::steps_));
}
CamCtlRequest_motorMoveRequest::~CamCtlRequest_motorMoveRequest() {
  // @@protoc_insertion_point(destructor:CamCtlRequest.motorMoveRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CamCtlRequest_motorMoveRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CamCtlRequest_motorMoveRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(CamCtlRequest_motorMoveRequest, _impl_._cached_size_),
              false,
          },
          &CamCtlRequest_motorMoveRequest::MergeImpl,
          &CamCtlRequest_motorMoveRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void CamCtlRequest_motorMoveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CamCtlRequest.motorMoveRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.motor_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.steps_) -
      reinterpret_cast<char*>(&_impl_.motor_)) + sizeof(_impl_.steps_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CamCtlRequest_motorMoveRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CamCtlRequest_motorMoveRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CamCtlRequest_motorMoveRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CamCtlRequest_motorMoveRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .StepMotorType motor = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CamCtlRequest_motorMoveRequest, _impl_.motor_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CamCtlRequest_motorMoveRequest, _impl_.motor_)}},
    // .StepMotorDirection dir = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CamCtlRequest_motorMoveRequest, _impl_.dir_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CamCtlRequest_motorMoveRequest, _impl_.dir_)}},
    // uint32 steps = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CamCtlRequest_motorMoveRequest, _impl_.steps_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CamCtlRequest_motorMoveRequest, _impl_.steps_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .StepMotorType motor = 1;
    {PROTOBUF_FIELD_OFFSET(CamCtlRequest_motorMoveRequest, _impl_.motor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .StepMotorDirection dir = 2;
    {PROTOBUF_FIELD_OFFSET(CamCtlRequest_motorMoveRequest, _impl_.dir_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint32 steps = 3;
    {PROTOBUF_FIELD_OFFSET(CamCtlRequest_motorMoveRequest, _impl_.steps_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CamCtlRequest_motorMoveRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CamCtlRequest.motorMoveRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .StepMotorType motor = 1;
  if (this->_internal_motor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_motor(), target);
  }

  // .StepMotorDirection dir = 2;
  if (this->_internal_dir() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_dir(), target);
  }

  // uint32 steps = 3;
  if (this->_internal_steps() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_steps(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CamCtlRequest.motorMoveRequest)
  return target;
}

::size_t CamCtlRequest_motorMoveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CamCtlRequest.motorMoveRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .StepMotorType motor = 1;
  if (this->_internal_motor() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_motor());
  }

  // .StepMotorDirection dir = 2;
  if (this->_internal_dir() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_dir());
  }

  // uint32 steps = 3;
  if (this->_internal_steps() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_steps());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CamCtlRequest_motorMoveRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CamCtlRequest_motorMoveRequest*>(&to_msg);
  auto& from = static_cast<const CamCtlRequest_motorMoveRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CamCtlRequest.motorMoveRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_motor() != 0) {
    _this->_impl_.motor_ = from._impl_.motor_;
  }
  if (from._internal_dir() != 0) {
    _this->_impl_.dir_ = from._impl_.dir_;
  }
  if (from._internal_steps() != 0) {
    _this->_impl_.steps_ = from._impl_.steps_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CamCtlRequest_motorMoveRequest::CopyFrom(const CamCtlRequest_motorMoveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CamCtlRequest.motorMoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CamCtlRequest_motorMoveRequest::IsInitialized() const {
  return true;
}

void CamCtlRequest_motorMoveRequest::InternalSwap(CamCtlRequest_motorMoveRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CamCtlRequest_motorMoveRequest, _impl_.steps_)
      + sizeof(CamCtlRequest_motorMoveRequest::_impl_.steps_)
      - PROTOBUF_FIELD_OFFSET(CamCtlRequest_motorMoveRequest, _impl_.motor_)>(
          reinterpret_cast<char*>(&_impl_.motor_),
          reinterpret_cast<char*>(&other->_impl_.motor_));
}

::google::protobuf::Metadata CamCtlRequest_motorMoveRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_cameractl_2eproto_getter,
                                   &descriptor_table_cameractl_2eproto_once,
                                   file_level_metadata_cameractl_2eproto[16]);
}
// ===================================================================

class CamCtlRequest::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::CamCtlRequest, _impl_._oneof_case_);
};

void CamCtlRequest::set_allocated_setvencsettings(::CamCtlRequest_vencSettingsSetRequest* setvencsettings) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmdBody();
  if (setvencsettings) {
    ::google::protobuf::Arena* submessage_arena = setvencsettings->GetArena();
    if (message_arena != submessage_arena) {
      setvencsettings = ::google::protobuf::internal::GetOwnedMessage(message_arena, setvencsettings, submessage_arena);
    }
    set_has_setvencsettings();
    _impl_.cmdBody_.setvencsettings_ = setvencsettings;
  }
  // @@protoc_insertion_point(field_set_allocated:CamCtlRequest.setVencSettings)
}
void CamCtlRequest::set_allocated_movemotor(::CamCtlRequest_motorMoveRequest* movemotor) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmdBody();
  if (movemotor) {
    ::google::protobuf::Arena* submessage_arena = movemotor->GetArena();
    if (message_arena != submessage_arena) {
      movemotor = ::google::protobuf::internal::GetOwnedMessage(message_arena, movemotor, submessage_arena);
    }
    set_has_movemotor();
    _impl_.cmdBody_.movemotor_ = movemotor;
  }
  // @@protoc_insertion_point(field_set_allocated:CamCtlRequest.moveMotor)
}
void CamCtlRequest::set_allocated_newispsettings(::ISPSettings* newispsettings) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmdBody();
  if (newispsettings) {
    ::google::protobuf::Arena* submessage_arena = newispsettings->GetArena();
    if (message_arena != submessage_arena) {
      newispsettings = ::google::protobuf::internal::GetOwnedMessage(message_arena, newispsettings, submessage_arena);
    }
    set_has_newispsettings();
    _impl_.cmdBody_.newispsettings_ = newispsettings;
  }
  // @@protoc_insertion_point(field_set_allocated:CamCtlRequest.newIspSettings)
}
void CamCtlRequest::set_allocated_usermodrequest(::NewUserData* usermodrequest) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmdBody();
  if (usermodrequest) {
    ::google::protobuf::Arena* submessage_arena = usermodrequest->GetArena();
    if (message_arena != submessage_arena) {
      usermodrequest = ::google::protobuf::internal::GetOwnedMessage(message_arena, usermodrequest, submessage_arena);
    }
    set_has_usermodrequest();
    _impl_.cmdBody_.usermodrequest_ = usermodrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:CamCtlRequest.userModRequest)
}
void CamCtlRequest::set_allocated_newmsparams(::ModeSwitchParams* newmsparams) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmdBody();
  if (newmsparams) {
    ::google::protobuf::Arena* submessage_arena = newmsparams->GetArena();
    if (message_arena != submessage_arena) {
      newmsparams = ::google::protobuf::internal::GetOwnedMessage(message_arena, newmsparams, submessage_arena);
    }
    set_has_newmsparams();
    _impl_.cmdBody_.newmsparams_ = newmsparams;
  }
  // @@protoc_insertion_point(field_set_allocated:CamCtlRequest.newMsParams)
}
CamCtlRequest::CamCtlRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CamCtlRequest)
}
inline PROTOBUF_NDEBUG_INLINE CamCtlRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : cmdBody_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

CamCtlRequest::CamCtlRequest(
    ::google::protobuf::Arena* arena,
    const CamCtlRequest& from)
    : ::google::protobuf::Message(arena) {
  CamCtlRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.requesttype_ = from._impl_.requesttype_;
  switch (cmdBody_case()) {
    case CMDBODY_NOT_SET:
      break;
      case kPingRequest:
        _impl_.cmdBody_.pingrequest_ = from._impl_.cmdBody_.pingrequest_;
        break;
      case kSetVencSettings:
        _impl_.cmdBody_.setvencsettings_ = ::google::protobuf::Message::CopyConstruct<::CamCtlRequest_vencSettingsSetRequest>(arena, *from._impl_.cmdBody_.setvencsettings_);
        break;
      case kGetVencSettings:
        _impl_.cmdBody_.getvencsettings_ = from._impl_.cmdBody_.getvencsettings_;
        break;
      case kMoveMotor:
        _impl_.cmdBody_.movemotor_ = ::google::protobuf::Message::CopyConstruct<::CamCtlRequest_motorMoveRequest>(arena, *from._impl_.cmdBody_.movemotor_);
        break;
      case kIspSettingGetReq:
        _impl_.cmdBody_.ispsettinggetreq_ = from._impl_.cmdBody_.ispsettinggetreq_;
        break;
      case kNewIspSettings:
        _impl_.cmdBody_.newispsettings_ = ::google::protobuf::Message::CopyConstruct<::ISPSettings>(arena, *from._impl_.cmdBody_.newispsettings_);
        break;
      case kEnableIRLight:
        _impl_.cmdBody_.enableirlight_ = from._impl_.cmdBody_.enableirlight_;
        break;
      case kFetchUserList:
        _impl_.cmdBody_.fetchuserlist_ = from._impl_.cmdBody_.fetchuserlist_;
        break;
      case kUserModRequest:
        _impl_.cmdBody_.usermodrequest_ = ::google::protobuf::Message::CopyConstruct<::NewUserData>(arena, *from._impl_.cmdBody_.usermodrequest_);
        break;
      case kMsParamsGetReq:
        _impl_.cmdBody_.msparamsgetreq_ = from._impl_.cmdBody_.msparamsgetreq_;
        break;
      case kNewMsParams:
        _impl_.cmdBody_.newmsparams_ = ::google::protobuf::Message::CopyConstruct<::ModeSwitchParams>(arena, *from._impl_.cmdBody_.newmsparams_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:CamCtlRequest)
}
inline PROTOBUF_NDEBUG_INLINE CamCtlRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cmdBody_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void CamCtlRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.requesttype_ = {};
}
CamCtlRequest::~CamCtlRequest() {
  // @@protoc_insertion_point(destructor:CamCtlRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CamCtlRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_cmdBody()) {
    clear_cmdBody();
  }
  _impl_.~Impl_();
}

void CamCtlRequest::clear_cmdBody() {
// @@protoc_insertion_point(one_of_clear_start:CamCtlRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (cmdBody_case()) {
    case kPingRequest: {
      // No need to clear
      break;
    }
    case kSetVencSettings: {
      if (GetArena() == nullptr) {
        delete _impl_.cmdBody_.setvencsettings_;
      }
      break;
    }
    case kGetVencSettings: {
      // No need to clear
      break;
    }
    case kMoveMotor: {
      if (GetArena() == nullptr) {
        delete _impl_.cmdBody_.movemotor_;
      }
      break;
    }
    case kIspSettingGetReq: {
      // No need to clear
      break;
    }
    case kNewIspSettings: {
      if (GetArena() == nullptr) {
        delete _impl_.cmdBody_.newispsettings_;
      }
      break;
    }
    case kEnableIRLight: {
      // No need to clear
      break;
    }
    case kFetchUserList: {
      // No need to clear
      break;
    }
    case kUserModRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.cmdBody_.usermodrequest_;
      }
      break;
    }
    case kMsParamsGetReq: {
      // No need to clear
      break;
    }
    case kNewMsParams: {
      if (GetArena() == nullptr) {
        delete _impl_.cmdBody_.newmsparams_;
      }
      break;
    }
    case CMDBODY_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CMDBODY_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
CamCtlRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(CamCtlRequest, _impl_._cached_size_),
              false,
          },
          &CamCtlRequest::MergeImpl,
          &CamCtlRequest::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void CamCtlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CamCtlRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.requesttype_ = 0;
  clear_cmdBody();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CamCtlRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 12, 5, 0, 2> CamCtlRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CamCtlRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CamCtlRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .CamCtlRequest.RequestType requestType = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CamCtlRequest, _impl_.requesttype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CamCtlRequest, _impl_.requesttype_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .CamCtlRequest.RequestType requestType = 1;
    {PROTOBUF_FIELD_OFFSET(CamCtlRequest, _impl_.requesttype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bool pingRequest = 2;
    {PROTOBUF_FIELD_OFFSET(CamCtlRequest, _impl_.cmdBody_.pingrequest_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // .CamCtlRequest.vencSettingsSetRequest setVencSettings = 3;
    {PROTOBUF_FIELD_OFFSET(CamCtlRequest, _impl_.cmdBody_.setvencsettings_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .VencType getVencSettings = 4;
    {PROTOBUF_FIELD_OFFSET(CamCtlRequest, _impl_.cmdBody_.getvencsettings_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kOpenEnum)},
    // .CamCtlRequest.motorMoveRequest moveMotor = 5;
    {PROTOBUF_FIELD_OFFSET(CamCtlRequest, _impl_.cmdBody_.movemotor_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool ispSettingGetReq = 6;
    {PROTOBUF_FIELD_OFFSET(CamCtlRequest, _impl_.cmdBody_.ispsettinggetreq_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // .ISPSettings newIspSettings = 7;
    {PROTOBUF_FIELD_OFFSET(CamCtlRequest, _impl_.cmdBody_.newispsettings_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool enableIRLight = 8;
    {PROTOBUF_FIELD_OFFSET(CamCtlRequest, _impl_.cmdBody_.enableirlight_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // bool fetchUserList = 9;
    {PROTOBUF_FIELD_OFFSET(CamCtlRequest, _impl_.cmdBody_.fetchuserlist_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // .NewUserData userModRequest = 10;
    {PROTOBUF_FIELD_OFFSET(CamCtlRequest, _impl_.cmdBody_.usermodrequest_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool msParamsGetReq = 11;
    {PROTOBUF_FIELD_OFFSET(CamCtlRequest, _impl_.cmdBody_.msparamsgetreq_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBool)},
    // .ModeSwitchParams newMsParams = 12;
    {PROTOBUF_FIELD_OFFSET(CamCtlRequest, _impl_.cmdBody_.newmsparams_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::CamCtlRequest_vencSettingsSetRequest>()},
    {::_pbi::TcParser::GetTable<::CamCtlRequest_motorMoveRequest>()},
    {::_pbi::TcParser::GetTable<::ISPSettings>()},
    {::_pbi::TcParser::GetTable<::NewUserData>()},
    {::_pbi::TcParser::GetTable<::ModeSwitchParams>()},
  }}, {{
  }},
};

::uint8_t* CamCtlRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CamCtlRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .CamCtlRequest.RequestType requestType = 1;
  if (this->_internal_requesttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_requesttype(), target);
  }

  switch (cmdBody_case()) {
    case kPingRequest: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this->_internal_pingrequest(), target);
      break;
    }
    case kSetVencSettings: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *_impl_.cmdBody_.setvencsettings_, _impl_.cmdBody_.setvencsettings_->GetCachedSize(), target, stream);
      break;
    }
    case kGetVencSettings: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this->_internal_getvencsettings(), target);
      break;
    }
    case kMoveMotor: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, *_impl_.cmdBody_.movemotor_, _impl_.cmdBody_.movemotor_->GetCachedSize(), target, stream);
      break;
    }
    case kIspSettingGetReq: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          6, this->_internal_ispsettinggetreq(), target);
      break;
    }
    case kNewIspSettings: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, *_impl_.cmdBody_.newispsettings_, _impl_.cmdBody_.newispsettings_->GetCachedSize(), target, stream);
      break;
    }
    case kEnableIRLight: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          8, this->_internal_enableirlight(), target);
      break;
    }
    case kFetchUserList: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          9, this->_internal_fetchuserlist(), target);
      break;
    }
    case kUserModRequest: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          10, *_impl_.cmdBody_.usermodrequest_, _impl_.cmdBody_.usermodrequest_->GetCachedSize(), target, stream);
      break;
    }
    case kMsParamsGetReq: {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          11, this->_internal_msparamsgetreq(), target);
      break;
    }
    case kNewMsParams: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          12, *_impl_.cmdBody_.newmsparams_, _impl_.cmdBody_.newmsparams_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CamCtlRequest)
  return target;
}

::size_t CamCtlRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CamCtlRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .CamCtlRequest.RequestType requestType = 1;
  if (this->_internal_requesttype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_requesttype());
  }

  switch (cmdBody_case()) {
    // bool pingRequest = 2;
    case kPingRequest: {
      total_size += 2;
      break;
    }
    // .CamCtlRequest.vencSettingsSetRequest setVencSettings = 3;
    case kSetVencSettings: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmdBody_.setvencsettings_);
      break;
    }
    // .VencType getVencSettings = 4;
    case kGetVencSettings: {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_getvencsettings());
      break;
    }
    // .CamCtlRequest.motorMoveRequest moveMotor = 5;
    case kMoveMotor: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmdBody_.movemotor_);
      break;
    }
    // bool ispSettingGetReq = 6;
    case kIspSettingGetReq: {
      total_size += 2;
      break;
    }
    // .ISPSettings newIspSettings = 7;
    case kNewIspSettings: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmdBody_.newispsettings_);
      break;
    }
    // bool enableIRLight = 8;
    case kEnableIRLight: {
      total_size += 2;
      break;
    }
    // bool fetchUserList = 9;
    case kFetchUserList: {
      total_size += 2;
      break;
    }
    // .NewUserData userModRequest = 10;
    case kUserModRequest: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmdBody_.usermodrequest_);
      break;
    }
    // bool msParamsGetReq = 11;
    case kMsParamsGetReq: {
      total_size += 2;
      break;
    }
    // .ModeSwitchParams newMsParams = 12;
    case kNewMsParams: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cmdBody_.newmsparams_);
      break;
    }
    case CMDBODY_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CamCtlRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CamCtlRequest*>(&to_msg);
  auto& from = static_cast<const CamCtlRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CamCtlRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_requesttype() != 0) {
    _this->_impl_.requesttype_ = from._impl_.requesttype_;
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_cmdBody();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kPingRequest: {
        _this->_impl_.cmdBody_.pingrequest_ = from._impl_.cmdBody_.pingrequest_;
        break;
      }
      case kSetVencSettings: {
        if (oneof_needs_init) {
          _this->_impl_.cmdBody_.setvencsettings_ =
              ::google::protobuf::Message::CopyConstruct<::CamCtlRequest_vencSettingsSetRequest>(arena, *from._impl_.cmdBody_.setvencsettings_);
        } else {
          _this->_impl_.cmdBody_.setvencsettings_->MergeFrom(from._internal_setvencsettings());
        }
        break;
      }
      case kGetVencSettings: {
        _this->_impl_.cmdBody_.getvencsettings_ = from._impl_.cmdBody_.getvencsettings_;
        break;
      }
      case kMoveMotor: {
        if (oneof_needs_init) {
          _this->_impl_.cmdBody_.movemotor_ =
              ::google::protobuf::Message::CopyConstruct<::CamCtlRequest_motorMoveRequest>(arena, *from._impl_.cmdBody_.movemotor_);
        } else {
          _this->_impl_.cmdBody_.movemotor_->MergeFrom(from._internal_movemotor());
        }
        break;
      }
      case kIspSettingGetReq: {
        _this->_impl_.cmdBody_.ispsettinggetreq_ = from._impl_.cmdBody_.ispsettinggetreq_;
        break;
      }
      case kNewIspSettings: {
        if (oneof_needs_init) {
          _this->_impl_.cmdBody_.newispsettings_ =
              ::google::protobuf::Message::CopyConstruct<::ISPSettings>(arena, *from._impl_.cmdBody_.newispsettings_);
        } else {
          _this->_impl_.cmdBody_.newispsettings_->MergeFrom(from._internal_newispsettings());
        }
        break;
      }
      case kEnableIRLight: {
        _this->_impl_.cmdBody_.enableirlight_ = from._impl_.cmdBody_.enableirlight_;
        break;
      }
      case kFetchUserList: {
        _this->_impl_.cmdBody_.fetchuserlist_ = from._impl_.cmdBody_.fetchuserlist_;
        break;
      }
      case kUserModRequest: {
        if (oneof_needs_init) {
          _this->_impl_.cmdBody_.usermodrequest_ =
              ::google::protobuf::Message::CopyConstruct<::NewUserData>(arena, *from._impl_.cmdBody_.usermodrequest_);
        } else {
          _this->_impl_.cmdBody_.usermodrequest_->MergeFrom(from._internal_usermodrequest());
        }
        break;
      }
      case kMsParamsGetReq: {
        _this->_impl_.cmdBody_.msparamsgetreq_ = from._impl_.cmdBody_.msparamsgetreq_;
        break;
      }
      case kNewMsParams: {
        if (oneof_needs_init) {
          _this->_impl_.cmdBody_.newmsparams_ =
              ::google::protobuf::Message::CopyConstruct<::ModeSwitchParams>(arena, *from._impl_.cmdBody_.newmsparams_);
        } else {
          _this->_impl_.cmdBody_.newmsparams_->MergeFrom(from._internal_newmsparams());
        }
        break;
      }
      case CMDBODY_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CamCtlRequest::CopyFrom(const CamCtlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CamCtlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CamCtlRequest::IsInitialized() const {
  return true;
}

void CamCtlRequest::InternalSwap(CamCtlRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.requesttype_, other->_impl_.requesttype_);
  swap(_impl_.cmdBody_, other->_impl_.cmdBody_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata CamCtlRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_cameractl_2eproto_getter,
                                   &descriptor_table_cameractl_2eproto_once,
                                   file_level_metadata_cameractl_2eproto[17]);
}
// ===================================================================

class CamCtlResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CamCtlResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CamCtlResponse, _impl_._has_bits_);
};

CamCtlResponse::CamCtlResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CamCtlResponse)
}
inline PROTOBUF_NDEBUG_INLINE CamCtlResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        errorreason_(arena, from.errorreason_) {}

CamCtlResponse::CamCtlResponse(
    ::google::protobuf::Arena* arena,
    const CamCtlResponse& from)
    : ::google::protobuf::Message(arena) {
  CamCtlResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.currentsettings_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings>(
                              arena, *from._impl_.currentsettings_)
                        : nullptr;
  _impl_.currentispsettings_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::ISPSettings>(
                              arena, *from._impl_.currentispsettings_)
                        : nullptr;
  _impl_.userlist_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::UserList>(
                              arena, *from._impl_.userlist_)
                        : nullptr;
  _impl_.currentmsparams_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::ModeSwitchParams>(
                              arena, *from._impl_.currentmsparams_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, responsetype_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, responsetype_),
           offsetof(Impl_, pingresponse_) -
               offsetof(Impl_, responsetype_) +
               sizeof(Impl_::pingresponse_));

  // @@protoc_insertion_point(copy_constructor:CamCtlResponse)
}
inline PROTOBUF_NDEBUG_INLINE CamCtlResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        errorreason_(arena) {}

inline void CamCtlResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, currentsettings_),
           0,
           offsetof(Impl_, pingresponse_) -
               offsetof(Impl_, currentsettings_) +
               sizeof(Impl_::pingresponse_));
}
CamCtlResponse::~CamCtlResponse() {
  // @@protoc_insertion_point(destructor:CamCtlResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CamCtlResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.errorreason_.Destroy();
  delete _impl_.currentsettings_;
  delete _impl_.currentispsettings_;
  delete _impl_.userlist_;
  delete _impl_.currentmsparams_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CamCtlResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(CamCtlResponse, _impl_._cached_size_),
              false,
          },
          &CamCtlResponse::MergeImpl,
          &CamCtlResponse::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void CamCtlResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CamCtlResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.errorreason_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.currentsettings_ != nullptr);
      _impl_.currentsettings_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.currentispsettings_ != nullptr);
      _impl_.currentispsettings_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.userlist_ != nullptr);
      _impl_.userlist_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.currentmsparams_ != nullptr);
      _impl_.currentmsparams_->Clear();
    }
  }
  _impl_.responsetype_ = 0;
  _impl_.pingresponse_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CamCtlResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 4, 34, 2> CamCtlResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CamCtlResponse, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CamCtlResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::CamCtlResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .CamCtlResponse.ResponseType responseType = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CamCtlResponse, _impl_.responsetype_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CamCtlResponse, _impl_.responsetype_)}},
    // optional string errorReason = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(CamCtlResponse, _impl_.errorreason_)}},
    // optional bool pingResponse = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CamCtlResponse, _impl_.pingresponse_), 5>(),
     {24, 5, 0, PROTOBUF_FIELD_OFFSET(CamCtlResponse, _impl_.pingresponse_)}},
    // optional .NvtCodecVencSettings currentSettings = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(CamCtlResponse, _impl_.currentsettings_)}},
    // optional .ISPSettings currentISPSettings = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 1, PROTOBUF_FIELD_OFFSET(CamCtlResponse, _impl_.currentispsettings_)}},
    // optional .UserList userList = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 2, PROTOBUF_FIELD_OFFSET(CamCtlResponse, _impl_.userlist_)}},
    // optional .ModeSwitchParams currentMsParams = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 4, 3, PROTOBUF_FIELD_OFFSET(CamCtlResponse, _impl_.currentmsparams_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .CamCtlResponse.ResponseType responseType = 1;
    {PROTOBUF_FIELD_OFFSET(CamCtlResponse, _impl_.responsetype_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // optional string errorReason = 2;
    {PROTOBUF_FIELD_OFFSET(CamCtlResponse, _impl_.errorreason_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional bool pingResponse = 3;
    {PROTOBUF_FIELD_OFFSET(CamCtlResponse, _impl_.pingresponse_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .NvtCodecVencSettings currentSettings = 4;
    {PROTOBUF_FIELD_OFFSET(CamCtlResponse, _impl_.currentsettings_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .ISPSettings currentISPSettings = 5;
    {PROTOBUF_FIELD_OFFSET(CamCtlResponse, _impl_.currentispsettings_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .UserList userList = 6;
    {PROTOBUF_FIELD_OFFSET(CamCtlResponse, _impl_.userlist_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .ModeSwitchParams currentMsParams = 7;
    {PROTOBUF_FIELD_OFFSET(CamCtlResponse, _impl_.currentmsparams_), _Internal::kHasBitsOffset + 4, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NvtCodecVencSettings>()},
    {::_pbi::TcParser::GetTable<::ISPSettings>()},
    {::_pbi::TcParser::GetTable<::UserList>()},
    {::_pbi::TcParser::GetTable<::ModeSwitchParams>()},
  }}, {{
    "\16\0\13\0\0\0\0\0"
    "CamCtlResponse"
    "errorReason"
  }},
};

::uint8_t* CamCtlResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CamCtlResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .CamCtlResponse.ResponseType responseType = 1;
  if (this->_internal_responsetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_responsetype(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string errorReason = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_errorreason();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "CamCtlResponse.errorReason");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional bool pingResponse = 3;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_pingresponse(), target);
  }

  // optional .NvtCodecVencSettings currentSettings = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *_impl_.currentsettings_, _impl_.currentsettings_->GetCachedSize(), target, stream);
  }

  // optional .ISPSettings currentISPSettings = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *_impl_.currentispsettings_, _impl_.currentispsettings_->GetCachedSize(), target, stream);
  }

  // optional .UserList userList = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *_impl_.userlist_, _impl_.userlist_->GetCachedSize(), target, stream);
  }

  // optional .ModeSwitchParams currentMsParams = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *_impl_.currentmsparams_, _impl_.currentmsparams_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CamCtlResponse)
  return target;
}

::size_t CamCtlResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CamCtlResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string errorReason = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_errorreason());
    }

    // optional .NvtCodecVencSettings currentSettings = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.currentsettings_);
    }

    // optional .ISPSettings currentISPSettings = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.currentispsettings_);
    }

    // optional .UserList userList = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.userlist_);
    }

    // optional .ModeSwitchParams currentMsParams = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.currentmsparams_);
    }

  }
  // .CamCtlResponse.ResponseType responseType = 1;
  if (this->_internal_responsetype() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_responsetype());
  }

  // optional bool pingResponse = 3;
  if (cached_has_bits & 0x00000020u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CamCtlResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CamCtlResponse*>(&to_msg);
  auto& from = static_cast<const CamCtlResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:CamCtlResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_errorreason(from._internal_errorreason());
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.currentsettings_ != nullptr);
      if (_this->_impl_.currentsettings_ == nullptr) {
        _this->_impl_.currentsettings_ =
            ::google::protobuf::Message::CopyConstruct<::NvtCodecVencSettings>(arena, *from._impl_.currentsettings_);
      } else {
        _this->_impl_.currentsettings_->MergeFrom(*from._impl_.currentsettings_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.currentispsettings_ != nullptr);
      if (_this->_impl_.currentispsettings_ == nullptr) {
        _this->_impl_.currentispsettings_ =
            ::google::protobuf::Message::CopyConstruct<::ISPSettings>(arena, *from._impl_.currentispsettings_);
      } else {
        _this->_impl_.currentispsettings_->MergeFrom(*from._impl_.currentispsettings_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.userlist_ != nullptr);
      if (_this->_impl_.userlist_ == nullptr) {
        _this->_impl_.userlist_ =
            ::google::protobuf::Message::CopyConstruct<::UserList>(arena, *from._impl_.userlist_);
      } else {
        _this->_impl_.userlist_->MergeFrom(*from._impl_.userlist_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.currentmsparams_ != nullptr);
      if (_this->_impl_.currentmsparams_ == nullptr) {
        _this->_impl_.currentmsparams_ =
            ::google::protobuf::Message::CopyConstruct<::ModeSwitchParams>(arena, *from._impl_.currentmsparams_);
      } else {
        _this->_impl_.currentmsparams_->MergeFrom(*from._impl_.currentmsparams_);
      }
    }
  }
  if (from._internal_responsetype() != 0) {
    _this->_impl_.responsetype_ = from._impl_.responsetype_;
  }
  if (cached_has_bits & 0x00000020u) {
    _this->_impl_.pingresponse_ = from._impl_.pingresponse_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CamCtlResponse::CopyFrom(const CamCtlResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CamCtlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CamCtlResponse::IsInitialized() const {
  return true;
}

void CamCtlResponse::InternalSwap(CamCtlResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.errorreason_, &other->_impl_.errorreason_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CamCtlResponse, _impl_.pingresponse_)
      + sizeof(CamCtlResponse::_impl_.pingresponse_)
      - PROTOBUF_FIELD_OFFSET(CamCtlResponse, _impl_.currentsettings_)>(
          reinterpret_cast<char*>(&_impl_.currentsettings_),
          reinterpret_cast<char*>(&other->_impl_.currentsettings_));
}

::google::protobuf::Metadata CamCtlResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_cameractl_2eproto_getter,
                                   &descriptor_table_cameractl_2eproto_once,
                                   file_level_metadata_cameractl_2eproto[18]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_cameractl_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
